[
  {
    "name": "Period Schedule",
    "slug": "Period Schedule",
    "fields": [
      {
        "key": "Usage",
        "label": "Usage",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Absence",
              "label": "Absence"
            },
            {
              "value": "Payroll",
              "label": "Payroll"
            },
            {
              "value": "Timesheets",
              "label": "Timesheets"
            },
            {
              "value": "Time Tracking",
              "label": "Time Tracking"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Usage is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Period Schedule Name",
        "label": "Period Schedule Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Frequency",
        "label": "Frequency",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Start Date",
        "label": "Start Date",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "End Date",
        "label": "End Date",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Pay Date",
        "label": "Pay Date",
        "type": "string",
        "metadata": {
          "validations": [
            "Unmatch"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Unmatch",
              "Compare Worksheet": "Holidays",
              "Compare Column": "Date",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Date is Bank Holiday."
            }
          ]
        }
      },
      {
        "key": "Use GL Accrual?",
        "label": "Use GL Accrual?",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Days to Accrue",
        "label": "Days to Accrue",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Days in Basis",
        "label": "Days in Basis",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Accrual Date",
        "label": "Accrual Date",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Accrual Reversal Date",
        "label": "Accrual Reversal Date",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Run Categories",
    "slug": "Run Categories",
    "fields": [
      {
        "key": "Run Category Name",
        "label": "Run Category Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Run Category Name is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Run Category Name must be unique and cannot be duplicated."
            }
          ]
        }
      },
      {
        "key": "Regular Run Category",
        "label": "Regular Run Category",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Onevalue",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Onevalue",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Only one run category should be \"Yes\" for Regular Run Category"
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Run Category must be marked \"Yes\" or \"No\". Other values not accepted."
            }
          ]
        }
      },
      {
        "key": "Gross Pay",
        "label": "Gross Pay",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Gross Pay is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Net Pay",
        "label": "Net Pay",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Net Pay is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Country",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country must match one of the drop downs."
            }
          ]
        }
      },
      {
        "key": "Country Code",
        "label": "Country Code",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "USA",
              "label": "USA"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "CountryCode",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country Code must match one of the drop downs."
            }
          ]
        }
      },
      {
        "key": "Non Regular Taxation",
        "label": "Non Regular Taxation",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Non Regular Taxation column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Use State Supplemental Flat Tax Rate",
        "label": "Use State Supplemental Flat Tax Rate",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Use State Supplemental Flat Rate Tax column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      }
    ]
  },
  {
    "name": "Pay Groups",
    "slug": "Pay Groups",
    "fields": [
      {
        "key": "Select Yes or No",
        "label": "Select Yes or No",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "=Value"
          ],
          "validation_criteria": [
            {
              "ValidationType": "=Value",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": "Yes",
              "Error Message": "Make sure to delete this pay group as it is not going to be loaded"
            }
          ]
        }
      },
      {
        "key": "Pay Group Name",
        "label": "Pay Group Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Group Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Pay Group ID",
        "label": "Pay Group ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Group ID is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Country",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country must match one of the drop downs."
            }
          ]
        }
      },
      {
        "key": "Country Code",
        "label": "Country Code",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "AFG",
              "label": "AFG"
            },
            {
              "value": "ALB",
              "label": "ALB"
            },
            {
              "value": "DZA",
              "label": "DZA"
            },
            {
              "value": "ASM",
              "label": "ASM"
            },
            {
              "value": "AND",
              "label": "AND"
            },
            {
              "value": "AGO",
              "label": "AGO"
            },
            {
              "value": "AIA",
              "label": "AIA"
            },
            {
              "value": "ATG",
              "label": "ATG"
            },
            {
              "value": "ARG",
              "label": "ARG"
            },
            {
              "value": "ARM",
              "label": "ARM"
            },
            {
              "value": "ABW",
              "label": "ABW"
            },
            {
              "value": "AUS",
              "label": "AUS"
            },
            {
              "value": "AUT",
              "label": "AUT"
            },
            {
              "value": "AZE",
              "label": "AZE"
            },
            {
              "value": "BHS",
              "label": "BHS"
            },
            {
              "value": "BHR",
              "label": "BHR"
            },
            {
              "value": "BGD",
              "label": "BGD"
            },
            {
              "value": "BRB",
              "label": "BRB"
            },
            {
              "value": "BLR",
              "label": "BLR"
            },
            {
              "value": "BEL",
              "label": "BEL"
            },
            {
              "value": "BLZ",
              "label": "BLZ"
            },
            {
              "value": "BEN",
              "label": "BEN"
            },
            {
              "value": "BMU",
              "label": "BMU"
            },
            {
              "value": "BTN",
              "label": "BTN"
            },
            {
              "value": "BOL",
              "label": "BOL"
            },
            {
              "value": "BES",
              "label": "BES"
            },
            {
              "value": "BIH",
              "label": "BIH"
            },
            {
              "value": "BWA",
              "label": "BWA"
            },
            {
              "value": "BRA",
              "label": "BRA"
            },
            {
              "value": "IOT",
              "label": "IOT"
            },
            {
              "value": "VGB",
              "label": "VGB"
            },
            {
              "value": "BRN",
              "label": "BRN"
            },
            {
              "value": "BGR",
              "label": "BGR"
            },
            {
              "value": "BFA",
              "label": "BFA"
            },
            {
              "value": "BDI",
              "label": "BDI"
            },
            {
              "value": "KHM",
              "label": "KHM"
            },
            {
              "value": "CMR",
              "label": "CMR"
            },
            {
              "value": "CAN",
              "label": "CAN"
            },
            {
              "value": "CPV",
              "label": "CPV"
            },
            {
              "value": "CYM",
              "label": "CYM"
            },
            {
              "value": "CAF",
              "label": "CAF"
            },
            {
              "value": "TCD",
              "label": "TCD"
            },
            {
              "value": "CHL",
              "label": "CHL"
            },
            {
              "value": "CHN",
              "label": "CHN"
            },
            {
              "value": "COL",
              "label": "COL"
            },
            {
              "value": "COM",
              "label": "COM"
            },
            {
              "value": "COG",
              "label": "COG"
            },
            {
              "value": "COD",
              "label": "COD"
            },
            {
              "value": "COK",
              "label": "COK"
            },
            {
              "value": "CRI",
              "label": "CRI"
            },
            {
              "value": "CIV",
              "label": "CIV"
            },
            {
              "value": "HRV",
              "label": "HRV"
            },
            {
              "value": "CUB",
              "label": "CUB"
            },
            {
              "value": "CUW",
              "label": "CUW"
            },
            {
              "value": "CYP",
              "label": "CYP"
            },
            {
              "value": "CZE",
              "label": "CZE"
            },
            {
              "value": "DNK",
              "label": "DNK"
            },
            {
              "value": "DJI",
              "label": "DJI"
            },
            {
              "value": "DMA",
              "label": "DMA"
            },
            {
              "value": "DOM",
              "label": "DOM"
            },
            {
              "value": "ECU",
              "label": "ECU"
            },
            {
              "value": "EGY",
              "label": "EGY"
            },
            {
              "value": "SLV",
              "label": "SLV"
            },
            {
              "value": "GNQ",
              "label": "GNQ"
            },
            {
              "value": "ERI",
              "label": "ERI"
            },
            {
              "value": "EST",
              "label": "EST"
            },
            {
              "value": "ETH",
              "label": "ETH"
            },
            {
              "value": "FLK",
              "label": "FLK"
            },
            {
              "value": "FRO",
              "label": "FRO"
            },
            {
              "value": "FJI",
              "label": "FJI"
            },
            {
              "value": "FIN",
              "label": "FIN"
            },
            {
              "value": "FRA",
              "label": "FRA"
            },
            {
              "value": "GUF",
              "label": "GUF"
            },
            {
              "value": "PYF",
              "label": "PYF"
            },
            {
              "value": "GAB",
              "label": "GAB"
            },
            {
              "value": "GMB",
              "label": "GMB"
            },
            {
              "value": "GEO",
              "label": "GEO"
            },
            {
              "value": "DEU",
              "label": "DEU"
            },
            {
              "value": "GHA",
              "label": "GHA"
            },
            {
              "value": "GIB",
              "label": "GIB"
            },
            {
              "value": "GRC",
              "label": "GRC"
            },
            {
              "value": "GRL",
              "label": "GRL"
            },
            {
              "value": "GRD",
              "label": "GRD"
            },
            {
              "value": "GLP",
              "label": "GLP"
            },
            {
              "value": "GUM",
              "label": "GUM"
            },
            {
              "value": "GTM",
              "label": "GTM"
            },
            {
              "value": "GGY",
              "label": "GGY"
            },
            {
              "value": "GIN",
              "label": "GIN"
            },
            {
              "value": "GNB",
              "label": "GNB"
            },
            {
              "value": "GUY",
              "label": "GUY"
            },
            {
              "value": "HTI",
              "label": "HTI"
            },
            {
              "value": "VAT",
              "label": "VAT"
            },
            {
              "value": "HND",
              "label": "HND"
            },
            {
              "value": "HKG",
              "label": "HKG"
            },
            {
              "value": "HUN",
              "label": "HUN"
            },
            {
              "value": "ISL",
              "label": "ISL"
            },
            {
              "value": "IND",
              "label": "IND"
            },
            {
              "value": "IDN",
              "label": "IDN"
            },
            {
              "value": "IRN",
              "label": "IRN"
            },
            {
              "value": "IRQ",
              "label": "IRQ"
            },
            {
              "value": "IRL",
              "label": "IRL"
            },
            {
              "value": "IMN",
              "label": "IMN"
            },
            {
              "value": "ISR",
              "label": "ISR"
            },
            {
              "value": "ITA",
              "label": "ITA"
            },
            {
              "value": "JAM",
              "label": "JAM"
            },
            {
              "value": "JPN",
              "label": "JPN"
            },
            {
              "value": "JEY",
              "label": "JEY"
            },
            {
              "value": "JOR",
              "label": "JOR"
            },
            {
              "value": "KAZ",
              "label": "KAZ"
            },
            {
              "value": "KEN",
              "label": "KEN"
            },
            {
              "value": "KIR",
              "label": "KIR"
            },
            {
              "value": "PRK",
              "label": "PRK"
            },
            {
              "value": "KOR",
              "label": "KOR"
            },
            {
              "value": "KSV",
              "label": "KSV"
            },
            {
              "value": "KWT",
              "label": "KWT"
            },
            {
              "value": "KGZ",
              "label": "KGZ"
            },
            {
              "value": "LAO",
              "label": "LAO"
            },
            {
              "value": "LVA",
              "label": "LVA"
            },
            {
              "value": "LBN",
              "label": "LBN"
            },
            {
              "value": "LSO",
              "label": "LSO"
            },
            {
              "value": "LBR",
              "label": "LBR"
            },
            {
              "value": "LBY",
              "label": "LBY"
            },
            {
              "value": "LIE",
              "label": "LIE"
            },
            {
              "value": "LTU",
              "label": "LTU"
            },
            {
              "value": "LUX",
              "label": "LUX"
            },
            {
              "value": "MAC",
              "label": "MAC"
            },
            {
              "value": "MKD",
              "label": "MKD"
            },
            {
              "value": "MDG",
              "label": "MDG"
            },
            {
              "value": "MWI",
              "label": "MWI"
            },
            {
              "value": "MYS",
              "label": "MYS"
            },
            {
              "value": "MDV",
              "label": "MDV"
            },
            {
              "value": "MLI",
              "label": "MLI"
            },
            {
              "value": "MLT",
              "label": "MLT"
            },
            {
              "value": "MHL",
              "label": "MHL"
            },
            {
              "value": "MTQ",
              "label": "MTQ"
            },
            {
              "value": "MRT",
              "label": "MRT"
            },
            {
              "value": "MUS",
              "label": "MUS"
            },
            {
              "value": "MEX",
              "label": "MEX"
            },
            {
              "value": "FSM",
              "label": "FSM"
            },
            {
              "value": "MDA",
              "label": "MDA"
            },
            {
              "value": "MCO",
              "label": "MCO"
            },
            {
              "value": "MNG",
              "label": "MNG"
            },
            {
              "value": "MNE",
              "label": "MNE"
            },
            {
              "value": "MAR",
              "label": "MAR"
            },
            {
              "value": "MOZ",
              "label": "MOZ"
            },
            {
              "value": "MMR",
              "label": "MMR"
            },
            {
              "value": "NAM",
              "label": "NAM"
            },
            {
              "value": "NRU",
              "label": "NRU"
            },
            {
              "value": "NPL",
              "label": "NPL"
            },
            {
              "value": "NLD",
              "label": "NLD"
            },
            {
              "value": "NCL",
              "label": "NCL"
            },
            {
              "value": "NZL",
              "label": "NZL"
            },
            {
              "value": "NIC",
              "label": "NIC"
            },
            {
              "value": "NER",
              "label": "NER"
            },
            {
              "value": "NGA",
              "label": "NGA"
            },
            {
              "value": "MNP",
              "label": "MNP"
            },
            {
              "value": "NOR",
              "label": "NOR"
            },
            {
              "value": "OMN",
              "label": "OMN"
            },
            {
              "value": "PAK",
              "label": "PAK"
            },
            {
              "value": "PLW",
              "label": "PLW"
            },
            {
              "value": "PSE",
              "label": "PSE"
            },
            {
              "value": "PAN",
              "label": "PAN"
            },
            {
              "value": "PNG",
              "label": "PNG"
            },
            {
              "value": "PRY",
              "label": "PRY"
            },
            {
              "value": "PER",
              "label": "PER"
            },
            {
              "value": "PHL",
              "label": "PHL"
            },
            {
              "value": "POL",
              "label": "POL"
            },
            {
              "value": "PRT",
              "label": "PRT"
            },
            {
              "value": "QAT",
              "label": "QAT"
            },
            {
              "value": "REU",
              "label": "REU"
            },
            {
              "value": "ROU",
              "label": "ROU"
            },
            {
              "value": "RUS",
              "label": "RUS"
            },
            {
              "value": "RWA",
              "label": "RWA"
            },
            {
              "value": "KNA",
              "label": "KNA"
            },
            {
              "value": "LCA",
              "label": "LCA"
            },
            {
              "value": "VCT",
              "label": "VCT"
            },
            {
              "value": "WSM",
              "label": "WSM"
            },
            {
              "value": "SMR",
              "label": "SMR"
            },
            {
              "value": "STP",
              "label": "STP"
            },
            {
              "value": "SAU",
              "label": "SAU"
            },
            {
              "value": "SEN",
              "label": "SEN"
            },
            {
              "value": "SRB",
              "label": "SRB"
            },
            {
              "value": "SYC",
              "label": "SYC"
            },
            {
              "value": "SLE",
              "label": "SLE"
            },
            {
              "value": "SGP",
              "label": "SGP"
            },
            {
              "value": "SXM",
              "label": "SXM"
            },
            {
              "value": "SVK",
              "label": "SVK"
            },
            {
              "value": "SVN",
              "label": "SVN"
            },
            {
              "value": "SLB",
              "label": "SLB"
            },
            {
              "value": "SOM",
              "label": "SOM"
            },
            {
              "value": "ZAF",
              "label": "ZAF"
            },
            {
              "value": "SSD",
              "label": "SSD"
            },
            {
              "value": "ESP",
              "label": "ESP"
            },
            {
              "value": "LKA",
              "label": "LKA"
            },
            {
              "value": "SDN",
              "label": "SDN"
            },
            {
              "value": "SUR",
              "label": "SUR"
            },
            {
              "value": "SWZ",
              "label": "SWZ"
            },
            {
              "value": "SWE",
              "label": "SWE"
            },
            {
              "value": "CHE",
              "label": "CHE"
            },
            {
              "value": "SYR",
              "label": "SYR"
            },
            {
              "value": "TWN",
              "label": "TWN"
            },
            {
              "value": "TJK",
              "label": "TJK"
            },
            {
              "value": "TZA",
              "label": "TZA"
            },
            {
              "value": "THA",
              "label": "THA"
            },
            {
              "value": "TLS",
              "label": "TLS"
            },
            {
              "value": "TGO",
              "label": "TGO"
            },
            {
              "value": "TON",
              "label": "TON"
            },
            {
              "value": "TTO",
              "label": "TTO"
            },
            {
              "value": "TUN",
              "label": "TUN"
            },
            {
              "value": "TUR",
              "label": "TUR"
            },
            {
              "value": "TKM",
              "label": "TKM"
            },
            {
              "value": "TCA",
              "label": "TCA"
            },
            {
              "value": "TUV",
              "label": "TUV"
            },
            {
              "value": "VIR",
              "label": "VIR"
            },
            {
              "value": "UGA",
              "label": "UGA"
            },
            {
              "value": "UKR",
              "label": "UKR"
            },
            {
              "value": "ARE",
              "label": "ARE"
            },
            {
              "value": "GBR",
              "label": "GBR"
            },
            {
              "value": "UMI",
              "label": "UMI"
            },
            {
              "value": "USA",
              "label": "USA"
            },
            {
              "value": "URY",
              "label": "URY"
            },
            {
              "value": "UZB",
              "label": "UZB"
            },
            {
              "value": "VUT",
              "label": "VUT"
            },
            {
              "value": "VEN",
              "label": "VEN"
            },
            {
              "value": "VNM",
              "label": "VNM"
            },
            {
              "value": "ESH",
              "label": "ESH"
            },
            {
              "value": "YEM",
              "label": "YEM"
            },
            {
              "value": "ZMB",
              "label": "ZMB"
            },
            {
              "value": "ZWE",
              "label": "ZWE"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "CountryCode",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country Code must match one of the drop downs."
            }
          ]
        }
      },
      {
        "key": "Run Category Name",
        "label": "Run Category Name",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Run Categories",
          "key": "Run Category Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Match",
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Run Category column does not match any value from the Run Categories worksheet."
            },
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Run Category Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Period Schedule",
        "label": "Period Schedule",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "BiWeeklyA",
              "label": "BiWeeklyA"
            },
            {
              "value": "BiWeeklyB",
              "label": "BiWeeklyB"
            },
            {
              "value": "Semimonthly",
              "label": "Semimonthly"
            },
            {
              "value": "Monthly",
              "label": "Monthly"
            },
            {
              "value": "Weekly",
              "label": "Weekly"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Period Schedule is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Period Schedule",
              "Compare Column": "Period Schedule Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Period Schedule column does not match any value from the Period Schedule worksheet."
            }
          ]
        }
      },
      {
        "key": "Days from Payment Date to Display Payslip",
        "label": "Days from Payment Date to Display Payslip",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Days from Payment Date to Display Payslip is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Pay Group Assignment Rule",
        "label": "Pay Group Assignment Rule",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Pay Run Group",
        "label": "Pay Run Group",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Start Period",
        "label": "Start Period",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Payroll Partner(s)",
        "label": "Payroll Partner(s)",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used in Payroll Interface?",
        "label": "Used in Payroll Interface?",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Financial Institutions",
    "slug": "Financial Institutions",
    "fields": [
      {
        "key": "Financial Institution Name",
        "label": "Financial Institution Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Financial Institution name is a required column."
            }
          ]
        }
      },
      {
        "key": "Reference ID",
        "label": "Reference ID",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Financial Institution ID",
        "label": "Financial Institution ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Financial Institution ID is a required column."
            }
          ]
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Afghanistan",
              "label": "Afghanistan"
            },
            {
              "value": "Albania",
              "label": "Albania"
            },
            {
              "value": "Algeria",
              "label": "Algeria"
            },
            {
              "value": "American Samoa",
              "label": "American Samoa"
            },
            {
              "value": "Andorra",
              "label": "Andorra"
            },
            {
              "value": "Angola",
              "label": "Angola"
            },
            {
              "value": "Anguilla",
              "label": "Anguilla"
            },
            {
              "value": "Antigua and Barbuda",
              "label": "Antigua and Barbuda"
            },
            {
              "value": "Argentina",
              "label": "Argentina"
            },
            {
              "value": "Armenia",
              "label": "Armenia"
            },
            {
              "value": "Aruba",
              "label": "Aruba"
            },
            {
              "value": "Australia",
              "label": "Australia"
            },
            {
              "value": "Austria",
              "label": "Austria"
            },
            {
              "value": "Azerbaijan",
              "label": "Azerbaijan"
            },
            {
              "value": "Bahamas",
              "label": "Bahamas"
            },
            {
              "value": "Bahrain",
              "label": "Bahrain"
            },
            {
              "value": "Bangladesh",
              "label": "Bangladesh"
            },
            {
              "value": "Barbados",
              "label": "Barbados"
            },
            {
              "value": "Belarus",
              "label": "Belarus"
            },
            {
              "value": "Belgium",
              "label": "Belgium"
            },
            {
              "value": "Belize",
              "label": "Belize"
            },
            {
              "value": "Benin",
              "label": "Benin"
            },
            {
              "value": "Bermuda",
              "label": "Bermuda"
            },
            {
              "value": "Bhutan",
              "label": "Bhutan"
            },
            {
              "value": "Bolivia",
              "label": "Bolivia"
            },
            {
              "value": "Bonaire, Sint Eustatius, and Saba",
              "label": "Bonaire, Sint Eustatius, and Saba"
            },
            {
              "value": "Bosnia and Herzegovina",
              "label": "Bosnia and Herzegovina"
            },
            {
              "value": "Botswana",
              "label": "Botswana"
            },
            {
              "value": "Brazil",
              "label": "Brazil"
            },
            {
              "value": "British Indian Ocean Territory",
              "label": "British Indian Ocean Territory"
            },
            {
              "value": "British Virgin Islands",
              "label": "British Virgin Islands"
            },
            {
              "value": "Brunei",
              "label": "Brunei"
            },
            {
              "value": "Bulgaria",
              "label": "Bulgaria"
            },
            {
              "value": "Burkina Faso",
              "label": "Burkina Faso"
            },
            {
              "value": "Burundi",
              "label": "Burundi"
            },
            {
              "value": "Cambodia",
              "label": "Cambodia"
            },
            {
              "value": "Cameroon",
              "label": "Cameroon"
            },
            {
              "value": "Canada",
              "label": "Canada"
            },
            {
              "value": "Cape Verde",
              "label": "Cape Verde"
            },
            {
              "value": "Cayman Islands",
              "label": "Cayman Islands"
            },
            {
              "value": "Central African Republic",
              "label": "Central African Republic"
            },
            {
              "value": "Chad",
              "label": "Chad"
            },
            {
              "value": "Chile",
              "label": "Chile"
            },
            {
              "value": "China",
              "label": "China"
            },
            {
              "value": "Colombia",
              "label": "Colombia"
            },
            {
              "value": "Comoros",
              "label": "Comoros"
            },
            {
              "value": "Congo",
              "label": "Congo"
            },
            {
              "value": "Congo, Democratic Republic of",
              "label": "Congo, Democratic Republic of"
            },
            {
              "value": "Cook Islands",
              "label": "Cook Islands"
            },
            {
              "value": "Costa Rica",
              "label": "Costa Rica"
            },
            {
              "value": "C\u00f4te D'Ivoire",
              "label": "C\u00f4te D'Ivoire"
            },
            {
              "value": "Croatia",
              "label": "Croatia"
            },
            {
              "value": "Cuba",
              "label": "Cuba"
            },
            {
              "value": "Cura\u00e7ao",
              "label": "Cura\u00e7ao"
            },
            {
              "value": "Cyprus",
              "label": "Cyprus"
            },
            {
              "value": "Czech Republic",
              "label": "Czech Republic"
            },
            {
              "value": "Denmark",
              "label": "Denmark"
            },
            {
              "value": "Djibouti",
              "label": "Djibouti"
            },
            {
              "value": "Dominica",
              "label": "Dominica"
            },
            {
              "value": "Dominican Republic",
              "label": "Dominican Republic"
            },
            {
              "value": "Ecuador",
              "label": "Ecuador"
            },
            {
              "value": "Egypt",
              "label": "Egypt"
            },
            {
              "value": "El Salvador",
              "label": "El Salvador"
            },
            {
              "value": "Equatorial Guinea",
              "label": "Equatorial Guinea"
            },
            {
              "value": "Eritrea",
              "label": "Eritrea"
            },
            {
              "value": "Estonia",
              "label": "Estonia"
            },
            {
              "value": "Ethiopia",
              "label": "Ethiopia"
            },
            {
              "value": "Falkland Islands",
              "label": "Falkland Islands"
            },
            {
              "value": "Faroe Islands",
              "label": "Faroe Islands"
            },
            {
              "value": "Fiji",
              "label": "Fiji"
            },
            {
              "value": "Finland",
              "label": "Finland"
            },
            {
              "value": "France",
              "label": "France"
            },
            {
              "value": "French Guiana",
              "label": "French Guiana"
            },
            {
              "value": "French Polynesia",
              "label": "French Polynesia"
            },
            {
              "value": "Gabon",
              "label": "Gabon"
            },
            {
              "value": "Gambia",
              "label": "Gambia"
            },
            {
              "value": "Georgia",
              "label": "Georgia"
            },
            {
              "value": "Germany",
              "label": "Germany"
            },
            {
              "value": "Ghana",
              "label": "Ghana"
            },
            {
              "value": "Gibraltar",
              "label": "Gibraltar"
            },
            {
              "value": "Greece",
              "label": "Greece"
            },
            {
              "value": "Greenland",
              "label": "Greenland"
            },
            {
              "value": "Grenada",
              "label": "Grenada"
            },
            {
              "value": "Guadeloupe",
              "label": "Guadeloupe"
            },
            {
              "value": "Guam",
              "label": "Guam"
            },
            {
              "value": "Guatemala",
              "label": "Guatemala"
            },
            {
              "value": "Guernsey",
              "label": "Guernsey"
            },
            {
              "value": "Guinea",
              "label": "Guinea"
            },
            {
              "value": "Guinea-Bissau",
              "label": "Guinea-Bissau"
            },
            {
              "value": "Guyana",
              "label": "Guyana"
            },
            {
              "value": "Haiti",
              "label": "Haiti"
            },
            {
              "value": "Holy See (Vatican City State)",
              "label": "Holy See (Vatican City State)"
            },
            {
              "value": "Honduras",
              "label": "Honduras"
            },
            {
              "value": "Hong Kong",
              "label": "Hong Kong"
            },
            {
              "value": "Hungary",
              "label": "Hungary"
            },
            {
              "value": "Iceland",
              "label": "Iceland"
            },
            {
              "value": "India",
              "label": "India"
            },
            {
              "value": "Indonesia",
              "label": "Indonesia"
            },
            {
              "value": "Iran",
              "label": "Iran"
            },
            {
              "value": "Iraq",
              "label": "Iraq"
            },
            {
              "value": "Ireland",
              "label": "Ireland"
            },
            {
              "value": "Isle of Man",
              "label": "Isle of Man"
            },
            {
              "value": "Israel",
              "label": "Israel"
            },
            {
              "value": "Italy",
              "label": "Italy"
            },
            {
              "value": "Jamaica",
              "label": "Jamaica"
            },
            {
              "value": "Japan",
              "label": "Japan"
            },
            {
              "value": "Jersey",
              "label": "Jersey"
            },
            {
              "value": "Jordan",
              "label": "Jordan"
            },
            {
              "value": "Kazakhstan",
              "label": "Kazakhstan"
            },
            {
              "value": "Kenya",
              "label": "Kenya"
            },
            {
              "value": "Kiribati",
              "label": "Kiribati"
            },
            {
              "value": "Korea, Democratic People's Republic of",
              "label": "Korea, Democratic People's Republic of"
            },
            {
              "value": "Korea, Republic of",
              "label": "Korea, Republic of"
            },
            {
              "value": "Kosovo",
              "label": "Kosovo"
            },
            {
              "value": "Kuwait",
              "label": "Kuwait"
            },
            {
              "value": "Kyrgyzstan",
              "label": "Kyrgyzstan"
            },
            {
              "value": "Laos",
              "label": "Laos"
            },
            {
              "value": "Latvia",
              "label": "Latvia"
            },
            {
              "value": "Lebanon",
              "label": "Lebanon"
            },
            {
              "value": "Lesotho",
              "label": "Lesotho"
            },
            {
              "value": "Liberia",
              "label": "Liberia"
            },
            {
              "value": "Libya",
              "label": "Libya"
            },
            {
              "value": "Liechtenstein",
              "label": "Liechtenstein"
            },
            {
              "value": "Lithuania",
              "label": "Lithuania"
            },
            {
              "value": "Luxembourg",
              "label": "Luxembourg"
            },
            {
              "value": "Macao",
              "label": "Macao"
            },
            {
              "value": "Macedonia",
              "label": "Macedonia"
            },
            {
              "value": "Madagascar",
              "label": "Madagascar"
            },
            {
              "value": "Malawi",
              "label": "Malawi"
            },
            {
              "value": "Malaysia",
              "label": "Malaysia"
            },
            {
              "value": "Maldives",
              "label": "Maldives"
            },
            {
              "value": "Mali",
              "label": "Mali"
            },
            {
              "value": "Malta",
              "label": "Malta"
            },
            {
              "value": "Marshall Islands",
              "label": "Marshall Islands"
            },
            {
              "value": "Martinique",
              "label": "Martinique"
            },
            {
              "value": "Mauritania",
              "label": "Mauritania"
            },
            {
              "value": "Mauritius",
              "label": "Mauritius"
            },
            {
              "value": "Mexico",
              "label": "Mexico"
            },
            {
              "value": "Micronesia, Federated States of",
              "label": "Micronesia, Federated States of"
            },
            {
              "value": "Moldova",
              "label": "Moldova"
            },
            {
              "value": "Monaco",
              "label": "Monaco"
            },
            {
              "value": "Mongolia",
              "label": "Mongolia"
            },
            {
              "value": "Montenegro",
              "label": "Montenegro"
            },
            {
              "value": "Morocco",
              "label": "Morocco"
            },
            {
              "value": "Mozambique",
              "label": "Mozambique"
            },
            {
              "value": "Myanmar",
              "label": "Myanmar"
            },
            {
              "value": "Namibia",
              "label": "Namibia"
            },
            {
              "value": "Nauru",
              "label": "Nauru"
            },
            {
              "value": "Nepal",
              "label": "Nepal"
            },
            {
              "value": "Netherlands",
              "label": "Netherlands"
            },
            {
              "value": "New Caledonia",
              "label": "New Caledonia"
            },
            {
              "value": "New Zealand",
              "label": "New Zealand"
            },
            {
              "value": "Nicaragua",
              "label": "Nicaragua"
            },
            {
              "value": "Niger",
              "label": "Niger"
            },
            {
              "value": "Nigeria",
              "label": "Nigeria"
            },
            {
              "value": "Northern Mariana Islands",
              "label": "Northern Mariana Islands"
            },
            {
              "value": "Norway",
              "label": "Norway"
            },
            {
              "value": "Oman",
              "label": "Oman"
            },
            {
              "value": "Pakistan",
              "label": "Pakistan"
            },
            {
              "value": "Palau",
              "label": "Palau"
            },
            {
              "value": "Palestine",
              "label": "Palestine"
            },
            {
              "value": "Panama",
              "label": "Panama"
            },
            {
              "value": "Papua New Guinea",
              "label": "Papua New Guinea"
            },
            {
              "value": "Paraguay",
              "label": "Paraguay"
            },
            {
              "value": "Peru",
              "label": "Peru"
            },
            {
              "value": "Philippines",
              "label": "Philippines"
            },
            {
              "value": "Poland",
              "label": "Poland"
            },
            {
              "value": "Portugal",
              "label": "Portugal"
            },
            {
              "value": "Qatar",
              "label": "Qatar"
            },
            {
              "value": "Reunion",
              "label": "Reunion"
            },
            {
              "value": "Romania",
              "label": "Romania"
            },
            {
              "value": "Russian Federation",
              "label": "Russian Federation"
            },
            {
              "value": "Rwanda",
              "label": "Rwanda"
            },
            {
              "value": "Saint Kitts and Nevis",
              "label": "Saint Kitts and Nevis"
            },
            {
              "value": "Saint Lucia",
              "label": "Saint Lucia"
            },
            {
              "value": "Saint Vincent and the Grenadines",
              "label": "Saint Vincent and the Grenadines"
            },
            {
              "value": "Samoa",
              "label": "Samoa"
            },
            {
              "value": "San Marino",
              "label": "San Marino"
            },
            {
              "value": "Sao Tome and Principe",
              "label": "Sao Tome and Principe"
            },
            {
              "value": "Saudi Arabia",
              "label": "Saudi Arabia"
            },
            {
              "value": "Senegal",
              "label": "Senegal"
            },
            {
              "value": "Serbia",
              "label": "Serbia"
            },
            {
              "value": "Seychelles",
              "label": "Seychelles"
            },
            {
              "value": "Sierra Leone",
              "label": "Sierra Leone"
            },
            {
              "value": "Singapore",
              "label": "Singapore"
            },
            {
              "value": "Sint Maarten",
              "label": "Sint Maarten"
            },
            {
              "value": "Slovakia",
              "label": "Slovakia"
            },
            {
              "value": "Slovenia",
              "label": "Slovenia"
            },
            {
              "value": "Solomon Islands",
              "label": "Solomon Islands"
            },
            {
              "value": "Somalia",
              "label": "Somalia"
            },
            {
              "value": "South Africa",
              "label": "South Africa"
            },
            {
              "value": "South Sudan",
              "label": "South Sudan"
            },
            {
              "value": "Spain",
              "label": "Spain"
            },
            {
              "value": "Sri Lanka",
              "label": "Sri Lanka"
            },
            {
              "value": "Sudan",
              "label": "Sudan"
            },
            {
              "value": "Suriname",
              "label": "Suriname"
            },
            {
              "value": "Swaziland",
              "label": "Swaziland"
            },
            {
              "value": "Sweden",
              "label": "Sweden"
            },
            {
              "value": "Switzerland",
              "label": "Switzerland"
            },
            {
              "value": "Syria",
              "label": "Syria"
            },
            {
              "value": "Taiwan",
              "label": "Taiwan"
            },
            {
              "value": "Tajikistan",
              "label": "Tajikistan"
            },
            {
              "value": "Tanzania",
              "label": "Tanzania"
            },
            {
              "value": "Thailand",
              "label": "Thailand"
            },
            {
              "value": "Timor-Leste",
              "label": "Timor-Leste"
            },
            {
              "value": "Togo",
              "label": "Togo"
            },
            {
              "value": "Tonga",
              "label": "Tonga"
            },
            {
              "value": "Trinidad and Tobago",
              "label": "Trinidad and Tobago"
            },
            {
              "value": "Tunisia",
              "label": "Tunisia"
            },
            {
              "value": "Turkey",
              "label": "Turkey"
            },
            {
              "value": "Turkmenistan",
              "label": "Turkmenistan"
            },
            {
              "value": "Turks and Caicos Islands",
              "label": "Turks and Caicos Islands"
            },
            {
              "value": "Tuvalu",
              "label": "Tuvalu"
            },
            {
              "value": "U. S. Virgin Islands",
              "label": "U. S. Virgin Islands"
            },
            {
              "value": "Uganda",
              "label": "Uganda"
            },
            {
              "value": "Ukraine",
              "label": "Ukraine"
            },
            {
              "value": "United Arab Emirates",
              "label": "United Arab Emirates"
            },
            {
              "value": "United Kingdom",
              "label": "United Kingdom"
            },
            {
              "value": "United States Minor Outlying Islands",
              "label": "United States Minor Outlying Islands"
            },
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Uruguay",
              "label": "Uruguay"
            },
            {
              "value": "Uzbekistan",
              "label": "Uzbekistan"
            },
            {
              "value": "Vanuatu",
              "label": "Vanuatu"
            },
            {
              "value": "Venezuela",
              "label": "Venezuela"
            },
            {
              "value": "Vietnam",
              "label": "Vietnam"
            },
            {
              "value": "Western Sahara",
              "label": "Western Sahara"
            },
            {
              "value": "Yemen",
              "label": "Yemen"
            },
            {
              "value": "Zambia",
              "label": "Zambia"
            },
            {
              "value": "Zimbabwe",
              "label": "Zimbabwe"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country name is a required column."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Country",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country must match one of the countries in the drop down list."
            }
          ]
        }
      },
      {
        "key": "Country Code",
        "label": "Country Code",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Region (State)",
        "label": "Region (State)",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Alabama",
              "label": "Alabama"
            },
            {
              "value": "Alaska",
              "label": "Alaska"
            },
            {
              "value": "Arizona",
              "label": "Arizona"
            },
            {
              "value": "Arkansas",
              "label": "Arkansas"
            },
            {
              "value": "California",
              "label": "California"
            },
            {
              "value": "Colorado",
              "label": "Colorado"
            },
            {
              "value": "Connecticut",
              "label": "Connecticut"
            },
            {
              "value": "Delaware",
              "label": "Delaware"
            },
            {
              "value": "District of Columbia",
              "label": "District of Columbia"
            },
            {
              "value": "Florida",
              "label": "Florida"
            },
            {
              "value": "Georgia",
              "label": "Georgia"
            },
            {
              "value": "Guam",
              "label": "Guam"
            },
            {
              "value": "Hawaii",
              "label": "Hawaii"
            },
            {
              "value": "Idaho",
              "label": "Idaho"
            },
            {
              "value": "Illinois",
              "label": "Illinois"
            },
            {
              "value": "Indiana",
              "label": "Indiana"
            },
            {
              "value": "Iowa",
              "label": "Iowa"
            },
            {
              "value": "Kansas",
              "label": "Kansas"
            },
            {
              "value": "Kentucky",
              "label": "Kentucky"
            },
            {
              "value": "Louisiana",
              "label": "Louisiana"
            },
            {
              "value": "Maine",
              "label": "Maine"
            },
            {
              "value": "Maryland",
              "label": "Maryland"
            },
            {
              "value": "Massachusetts",
              "label": "Massachusetts"
            },
            {
              "value": "Michigan",
              "label": "Michigan"
            },
            {
              "value": "Minnesota",
              "label": "Minnesota"
            },
            {
              "value": "Mississippi",
              "label": "Mississippi"
            },
            {
              "value": "Missouri",
              "label": "Missouri"
            },
            {
              "value": "Montana",
              "label": "Montana"
            },
            {
              "value": "Nebraska",
              "label": "Nebraska"
            },
            {
              "value": "Nevada",
              "label": "Nevada"
            },
            {
              "value": "New Hampshire",
              "label": "New Hampshire"
            },
            {
              "value": "New Jersey",
              "label": "New Jersey"
            },
            {
              "value": "New Mexico",
              "label": "New Mexico"
            },
            {
              "value": "New York",
              "label": "New York"
            },
            {
              "value": "North Carolina",
              "label": "North Carolina"
            },
            {
              "value": "North Dakota",
              "label": "North Dakota"
            },
            {
              "value": "Ohio",
              "label": "Ohio"
            },
            {
              "value": "Oklahoma",
              "label": "Oklahoma"
            },
            {
              "value": "Oregon",
              "label": "Oregon"
            },
            {
              "value": "Pennsylvania",
              "label": "Pennsylvania"
            },
            {
              "value": "Puerto Rico",
              "label": "Puerto Rico"
            },
            {
              "value": "Rhode Island",
              "label": "Rhode Island"
            },
            {
              "value": "South Carolina",
              "label": "South Carolina"
            },
            {
              "value": "South Dakota",
              "label": "South Dakota"
            },
            {
              "value": "Tennessee",
              "label": "Tennessee"
            },
            {
              "value": "Texas",
              "label": "Texas"
            },
            {
              "value": "Utah",
              "label": "Utah"
            },
            {
              "value": "Vermont",
              "label": "Vermont"
            },
            {
              "value": "Virginia",
              "label": "Virginia"
            },
            {
              "value": "Virgin Islands",
              "label": "Virgin Islands"
            },
            {
              "value": "Washington",
              "label": "Washington"
            },
            {
              "value": "West Virginia",
              "label": "West Virginia"
            },
            {
              "value": "Wisconsin",
              "label": "Wisconsin"
            },
            {
              "value": "Wyoming",
              "label": "Wyoming"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Region (State) is a required column."
            }
          ]
        }
      },
      {
        "key": "Subregion",
        "label": "Subregion",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "City",
        "label": "City",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "City name is a required column."
            }
          ]
        }
      },
      {
        "key": "Submunicipality",
        "label": "Submunicipality",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "City Subdivision",
        "label": "City Subdivision",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Postal Code",
        "label": "Postal Code",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Postal Code is a required column."
            }
          ]
        }
      },
      {
        "key": "Address Line #1",
        "label": "Address Line #1",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Address Line #1 name is a required column."
            }
          ]
        }
      },
      {
        "key": "Address Line #2",
        "label": "Address Line #2",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Address Line #3",
        "label": "Address Line #3",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Address Line #4",
        "label": "Address Line #4",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Country (Phone)",
        "label": "Country (Phone)",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Afghanistan",
              "label": "Afghanistan"
            },
            {
              "value": "Albania",
              "label": "Albania"
            },
            {
              "value": "Algeria",
              "label": "Algeria"
            },
            {
              "value": "American Samoa",
              "label": "American Samoa"
            },
            {
              "value": "Andorra",
              "label": "Andorra"
            },
            {
              "value": "Angola",
              "label": "Angola"
            },
            {
              "value": "Anguilla",
              "label": "Anguilla"
            },
            {
              "value": "Antigua and Barbuda",
              "label": "Antigua and Barbuda"
            },
            {
              "value": "Argentina",
              "label": "Argentina"
            },
            {
              "value": "Armenia",
              "label": "Armenia"
            },
            {
              "value": "Aruba",
              "label": "Aruba"
            },
            {
              "value": "Australia",
              "label": "Australia"
            },
            {
              "value": "Austria",
              "label": "Austria"
            },
            {
              "value": "Azerbaijan",
              "label": "Azerbaijan"
            },
            {
              "value": "Bahamas",
              "label": "Bahamas"
            },
            {
              "value": "Bahrain",
              "label": "Bahrain"
            },
            {
              "value": "Bangladesh",
              "label": "Bangladesh"
            },
            {
              "value": "Barbados",
              "label": "Barbados"
            },
            {
              "value": "Belarus",
              "label": "Belarus"
            },
            {
              "value": "Belgium",
              "label": "Belgium"
            },
            {
              "value": "Belize",
              "label": "Belize"
            },
            {
              "value": "Benin",
              "label": "Benin"
            },
            {
              "value": "Bermuda",
              "label": "Bermuda"
            },
            {
              "value": "Bhutan",
              "label": "Bhutan"
            },
            {
              "value": "Bolivia",
              "label": "Bolivia"
            },
            {
              "value": "Bonaire, Sint Eustatius, and Saba",
              "label": "Bonaire, Sint Eustatius, and Saba"
            },
            {
              "value": "Bosnia and Herzegovina",
              "label": "Bosnia and Herzegovina"
            },
            {
              "value": "Botswana",
              "label": "Botswana"
            },
            {
              "value": "Brazil",
              "label": "Brazil"
            },
            {
              "value": "British Indian Ocean Territory",
              "label": "British Indian Ocean Territory"
            },
            {
              "value": "British Virgin Islands",
              "label": "British Virgin Islands"
            },
            {
              "value": "Brunei",
              "label": "Brunei"
            },
            {
              "value": "Bulgaria",
              "label": "Bulgaria"
            },
            {
              "value": "Burkina Faso",
              "label": "Burkina Faso"
            },
            {
              "value": "Burundi",
              "label": "Burundi"
            },
            {
              "value": "Cambodia",
              "label": "Cambodia"
            },
            {
              "value": "Cameroon",
              "label": "Cameroon"
            },
            {
              "value": "Canada",
              "label": "Canada"
            },
            {
              "value": "Cape Verde",
              "label": "Cape Verde"
            },
            {
              "value": "Cayman Islands",
              "label": "Cayman Islands"
            },
            {
              "value": "Central African Republic",
              "label": "Central African Republic"
            },
            {
              "value": "Chad",
              "label": "Chad"
            },
            {
              "value": "Chile",
              "label": "Chile"
            },
            {
              "value": "China",
              "label": "China"
            },
            {
              "value": "Colombia",
              "label": "Colombia"
            },
            {
              "value": "Comoros",
              "label": "Comoros"
            },
            {
              "value": "Congo",
              "label": "Congo"
            },
            {
              "value": "Congo, Democratic Republic of",
              "label": "Congo, Democratic Republic of"
            },
            {
              "value": "Cook Islands",
              "label": "Cook Islands"
            },
            {
              "value": "Costa Rica",
              "label": "Costa Rica"
            },
            {
              "value": "C\u00f4te D'Ivoire",
              "label": "C\u00f4te D'Ivoire"
            },
            {
              "value": "Croatia",
              "label": "Croatia"
            },
            {
              "value": "Cuba",
              "label": "Cuba"
            },
            {
              "value": "Cura\u00e7ao",
              "label": "Cura\u00e7ao"
            },
            {
              "value": "Cyprus",
              "label": "Cyprus"
            },
            {
              "value": "Czech Republic",
              "label": "Czech Republic"
            },
            {
              "value": "Denmark",
              "label": "Denmark"
            },
            {
              "value": "Djibouti",
              "label": "Djibouti"
            },
            {
              "value": "Dominica",
              "label": "Dominica"
            },
            {
              "value": "Dominican Republic",
              "label": "Dominican Republic"
            },
            {
              "value": "Ecuador",
              "label": "Ecuador"
            },
            {
              "value": "Egypt",
              "label": "Egypt"
            },
            {
              "value": "El Salvador",
              "label": "El Salvador"
            },
            {
              "value": "Equatorial Guinea",
              "label": "Equatorial Guinea"
            },
            {
              "value": "Eritrea",
              "label": "Eritrea"
            },
            {
              "value": "Estonia",
              "label": "Estonia"
            },
            {
              "value": "Ethiopia",
              "label": "Ethiopia"
            },
            {
              "value": "Falkland Islands",
              "label": "Falkland Islands"
            },
            {
              "value": "Faroe Islands",
              "label": "Faroe Islands"
            },
            {
              "value": "Fiji",
              "label": "Fiji"
            },
            {
              "value": "Finland",
              "label": "Finland"
            },
            {
              "value": "France",
              "label": "France"
            },
            {
              "value": "French Guiana",
              "label": "French Guiana"
            },
            {
              "value": "French Polynesia",
              "label": "French Polynesia"
            },
            {
              "value": "Gabon",
              "label": "Gabon"
            },
            {
              "value": "Gambia",
              "label": "Gambia"
            },
            {
              "value": "Georgia",
              "label": "Georgia"
            },
            {
              "value": "Germany",
              "label": "Germany"
            },
            {
              "value": "Ghana",
              "label": "Ghana"
            },
            {
              "value": "Gibraltar",
              "label": "Gibraltar"
            },
            {
              "value": "Greece",
              "label": "Greece"
            },
            {
              "value": "Greenland",
              "label": "Greenland"
            },
            {
              "value": "Grenada",
              "label": "Grenada"
            },
            {
              "value": "Guadeloupe",
              "label": "Guadeloupe"
            },
            {
              "value": "Guam",
              "label": "Guam"
            },
            {
              "value": "Guatemala",
              "label": "Guatemala"
            },
            {
              "value": "Guernsey",
              "label": "Guernsey"
            },
            {
              "value": "Guinea",
              "label": "Guinea"
            },
            {
              "value": "Guinea-Bissau",
              "label": "Guinea-Bissau"
            },
            {
              "value": "Guyana",
              "label": "Guyana"
            },
            {
              "value": "Haiti",
              "label": "Haiti"
            },
            {
              "value": "Holy See (Vatican City State)",
              "label": "Holy See (Vatican City State)"
            },
            {
              "value": "Honduras",
              "label": "Honduras"
            },
            {
              "value": "Hong Kong",
              "label": "Hong Kong"
            },
            {
              "value": "Hungary",
              "label": "Hungary"
            },
            {
              "value": "Iceland",
              "label": "Iceland"
            },
            {
              "value": "India",
              "label": "India"
            },
            {
              "value": "Indonesia",
              "label": "Indonesia"
            },
            {
              "value": "Iran",
              "label": "Iran"
            },
            {
              "value": "Iraq",
              "label": "Iraq"
            },
            {
              "value": "Ireland",
              "label": "Ireland"
            },
            {
              "value": "Isle of Man",
              "label": "Isle of Man"
            },
            {
              "value": "Israel",
              "label": "Israel"
            },
            {
              "value": "Italy",
              "label": "Italy"
            },
            {
              "value": "Jamaica",
              "label": "Jamaica"
            },
            {
              "value": "Japan",
              "label": "Japan"
            },
            {
              "value": "Jersey",
              "label": "Jersey"
            },
            {
              "value": "Jordan",
              "label": "Jordan"
            },
            {
              "value": "Kazakhstan",
              "label": "Kazakhstan"
            },
            {
              "value": "Kenya",
              "label": "Kenya"
            },
            {
              "value": "Kiribati",
              "label": "Kiribati"
            },
            {
              "value": "Korea, Democratic People's Republic of",
              "label": "Korea, Democratic People's Republic of"
            },
            {
              "value": "Korea, Republic of",
              "label": "Korea, Republic of"
            },
            {
              "value": "Kosovo",
              "label": "Kosovo"
            },
            {
              "value": "Kuwait",
              "label": "Kuwait"
            },
            {
              "value": "Kyrgyzstan",
              "label": "Kyrgyzstan"
            },
            {
              "value": "Laos",
              "label": "Laos"
            },
            {
              "value": "Latvia",
              "label": "Latvia"
            },
            {
              "value": "Lebanon",
              "label": "Lebanon"
            },
            {
              "value": "Lesotho",
              "label": "Lesotho"
            },
            {
              "value": "Liberia",
              "label": "Liberia"
            },
            {
              "value": "Libya",
              "label": "Libya"
            },
            {
              "value": "Liechtenstein",
              "label": "Liechtenstein"
            },
            {
              "value": "Lithuania",
              "label": "Lithuania"
            },
            {
              "value": "Luxembourg",
              "label": "Luxembourg"
            },
            {
              "value": "Macao",
              "label": "Macao"
            },
            {
              "value": "Macedonia",
              "label": "Macedonia"
            },
            {
              "value": "Madagascar",
              "label": "Madagascar"
            },
            {
              "value": "Malawi",
              "label": "Malawi"
            },
            {
              "value": "Malaysia",
              "label": "Malaysia"
            },
            {
              "value": "Maldives",
              "label": "Maldives"
            },
            {
              "value": "Mali",
              "label": "Mali"
            },
            {
              "value": "Malta",
              "label": "Malta"
            },
            {
              "value": "Marshall Islands",
              "label": "Marshall Islands"
            },
            {
              "value": "Martinique",
              "label": "Martinique"
            },
            {
              "value": "Mauritania",
              "label": "Mauritania"
            },
            {
              "value": "Mauritius",
              "label": "Mauritius"
            },
            {
              "value": "Mexico",
              "label": "Mexico"
            },
            {
              "value": "Micronesia, Federated States of",
              "label": "Micronesia, Federated States of"
            },
            {
              "value": "Moldova",
              "label": "Moldova"
            },
            {
              "value": "Monaco",
              "label": "Monaco"
            },
            {
              "value": "Mongolia",
              "label": "Mongolia"
            },
            {
              "value": "Montenegro",
              "label": "Montenegro"
            },
            {
              "value": "Morocco",
              "label": "Morocco"
            },
            {
              "value": "Mozambique",
              "label": "Mozambique"
            },
            {
              "value": "Myanmar",
              "label": "Myanmar"
            },
            {
              "value": "Namibia",
              "label": "Namibia"
            },
            {
              "value": "Nauru",
              "label": "Nauru"
            },
            {
              "value": "Nepal",
              "label": "Nepal"
            },
            {
              "value": "Netherlands",
              "label": "Netherlands"
            },
            {
              "value": "New Caledonia",
              "label": "New Caledonia"
            },
            {
              "value": "New Zealand",
              "label": "New Zealand"
            },
            {
              "value": "Nicaragua",
              "label": "Nicaragua"
            },
            {
              "value": "Niger",
              "label": "Niger"
            },
            {
              "value": "Nigeria",
              "label": "Nigeria"
            },
            {
              "value": "Northern Mariana Islands",
              "label": "Northern Mariana Islands"
            },
            {
              "value": "Norway",
              "label": "Norway"
            },
            {
              "value": "Oman",
              "label": "Oman"
            },
            {
              "value": "Pakistan",
              "label": "Pakistan"
            },
            {
              "value": "Palau",
              "label": "Palau"
            },
            {
              "value": "Palestine",
              "label": "Palestine"
            },
            {
              "value": "Panama",
              "label": "Panama"
            },
            {
              "value": "Papua New Guinea",
              "label": "Papua New Guinea"
            },
            {
              "value": "Paraguay",
              "label": "Paraguay"
            },
            {
              "value": "Peru",
              "label": "Peru"
            },
            {
              "value": "Philippines",
              "label": "Philippines"
            },
            {
              "value": "Poland",
              "label": "Poland"
            },
            {
              "value": "Portugal",
              "label": "Portugal"
            },
            {
              "value": "Qatar",
              "label": "Qatar"
            },
            {
              "value": "Reunion",
              "label": "Reunion"
            },
            {
              "value": "Romania",
              "label": "Romania"
            },
            {
              "value": "Russian Federation",
              "label": "Russian Federation"
            },
            {
              "value": "Rwanda",
              "label": "Rwanda"
            },
            {
              "value": "Saint Kitts and Nevis",
              "label": "Saint Kitts and Nevis"
            },
            {
              "value": "Saint Lucia",
              "label": "Saint Lucia"
            },
            {
              "value": "Saint Vincent and the Grenadines",
              "label": "Saint Vincent and the Grenadines"
            },
            {
              "value": "Samoa",
              "label": "Samoa"
            },
            {
              "value": "San Marino",
              "label": "San Marino"
            },
            {
              "value": "Sao Tome and Principe",
              "label": "Sao Tome and Principe"
            },
            {
              "value": "Saudi Arabia",
              "label": "Saudi Arabia"
            },
            {
              "value": "Senegal",
              "label": "Senegal"
            },
            {
              "value": "Serbia",
              "label": "Serbia"
            },
            {
              "value": "Seychelles",
              "label": "Seychelles"
            },
            {
              "value": "Sierra Leone",
              "label": "Sierra Leone"
            },
            {
              "value": "Singapore",
              "label": "Singapore"
            },
            {
              "value": "Sint Maarten",
              "label": "Sint Maarten"
            },
            {
              "value": "Slovakia",
              "label": "Slovakia"
            },
            {
              "value": "Slovenia",
              "label": "Slovenia"
            },
            {
              "value": "Solomon Islands",
              "label": "Solomon Islands"
            },
            {
              "value": "Somalia",
              "label": "Somalia"
            },
            {
              "value": "South Africa",
              "label": "South Africa"
            },
            {
              "value": "South Sudan",
              "label": "South Sudan"
            },
            {
              "value": "Spain",
              "label": "Spain"
            },
            {
              "value": "Sri Lanka",
              "label": "Sri Lanka"
            },
            {
              "value": "Sudan",
              "label": "Sudan"
            },
            {
              "value": "Suriname",
              "label": "Suriname"
            },
            {
              "value": "Swaziland",
              "label": "Swaziland"
            },
            {
              "value": "Sweden",
              "label": "Sweden"
            },
            {
              "value": "Switzerland",
              "label": "Switzerland"
            },
            {
              "value": "Syria",
              "label": "Syria"
            },
            {
              "value": "Taiwan",
              "label": "Taiwan"
            },
            {
              "value": "Tajikistan",
              "label": "Tajikistan"
            },
            {
              "value": "Tanzania",
              "label": "Tanzania"
            },
            {
              "value": "Thailand",
              "label": "Thailand"
            },
            {
              "value": "Timor-Leste",
              "label": "Timor-Leste"
            },
            {
              "value": "Togo",
              "label": "Togo"
            },
            {
              "value": "Tonga",
              "label": "Tonga"
            },
            {
              "value": "Trinidad and Tobago",
              "label": "Trinidad and Tobago"
            },
            {
              "value": "Tunisia",
              "label": "Tunisia"
            },
            {
              "value": "Turkey",
              "label": "Turkey"
            },
            {
              "value": "Turkmenistan",
              "label": "Turkmenistan"
            },
            {
              "value": "Turks and Caicos Islands",
              "label": "Turks and Caicos Islands"
            },
            {
              "value": "Tuvalu",
              "label": "Tuvalu"
            },
            {
              "value": "U. S. Virgin Islands",
              "label": "U. S. Virgin Islands"
            },
            {
              "value": "Uganda",
              "label": "Uganda"
            },
            {
              "value": "Ukraine",
              "label": "Ukraine"
            },
            {
              "value": "United Arab Emirates",
              "label": "United Arab Emirates"
            },
            {
              "value": "United Kingdom",
              "label": "United Kingdom"
            },
            {
              "value": "United States Minor Outlying Islands",
              "label": "United States Minor Outlying Islands"
            },
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Uruguay",
              "label": "Uruguay"
            },
            {
              "value": "Uzbekistan",
              "label": "Uzbekistan"
            },
            {
              "value": "Vanuatu",
              "label": "Vanuatu"
            },
            {
              "value": "Venezuela",
              "label": "Venezuela"
            },
            {
              "value": "Vietnam",
              "label": "Vietnam"
            },
            {
              "value": "Western Sahara",
              "label": "Western Sahara"
            },
            {
              "value": "Yemen",
              "label": "Yemen"
            },
            {
              "value": "Zambia",
              "label": "Zambia"
            },
            {
              "value": "Zimbabwe",
              "label": "Zimbabwe"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Country",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country must match one of the countries in the drop down list."
            }
          ]
        }
      },
      {
        "key": "International Phone Code",
        "label": "International Phone Code",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Area Code",
        "label": "Area Code",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Phone Number",
        "label": "Phone Number",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Phone Number Extension",
        "label": "Phone Number Extension",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Email Address",
        "label": "Email Address",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Web Address",
        "label": "Web Address",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Bank Accounts",
    "slug": "Bank Accounts",
    "fields": [
      {
        "key": "Workday Ref ID",
        "label": "Workday Ref ID",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Bank Account Name",
        "label": "Bank Account Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Account Type",
        "label": "Account Type",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Bank Account",
              "label": "Bank Account"
            },
            {
              "value": "Outsourced Account",
              "label": "Outsourced Account"
            },
            {
              "value": "Petty Cash Account",
              "label": "Petty Cash Account"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Bank Account Type is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "BankAccountType",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Bank Account Type column does not match any of the drop down values."
            }
          ]
        }
      },
      {
        "key": "Account Number",
        "label": "Account Number",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Numeric"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Account Number is a required column and must be populated."
            },
            {
              "ValidationType": "Numeric",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Account Number column should contain numeric values only."
            }
          ]
        }
      },
      {
        "key": "Routing Number",
        "label": "Routing Number",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Match",
            "MatchValueorFormat",
            "Numeric"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Routing Transit Number is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Routing Numbers",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Routing Number is not valid. Please confirm the Bank's Routing Number."
            },
            {
              "ValidationType": "MatchValueorFormat",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": "Bank Accounts!Country=United States of America",
              "Value\\Format": "d{9}",
              "Error Message": "Routing Transit Number column should be 9 digits only. No dashes, spaces or other special characters allowed."
            },
            {
              "ValidationType": "Numeric",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Routing Transit Number column should contain numeric values only"
            }
          ]
        }
      },
      {
        "key": "IBAN",
        "label": "IBAN",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Bank Identification Code",
        "label": "Bank Identification Code",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Company Name",
        "label": "Company Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Company is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Imported EE Data",
              "Compare Column": "Company",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Company column does not match any of the available companies on the Imported EE Data worksheet."
            }
          ]
        }
      },
      {
        "key": "Accept All Currencies",
        "label": "Accept All Currencies",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Afghanistan",
              "label": "Afghanistan"
            },
            {
              "value": "Albania",
              "label": "Albania"
            },
            {
              "value": "Algeria",
              "label": "Algeria"
            },
            {
              "value": "American Samoa",
              "label": "American Samoa"
            },
            {
              "value": "Andorra",
              "label": "Andorra"
            },
            {
              "value": "Angola",
              "label": "Angola"
            },
            {
              "value": "Anguilla",
              "label": "Anguilla"
            },
            {
              "value": "Antigua and Barbuda",
              "label": "Antigua and Barbuda"
            },
            {
              "value": "Argentina",
              "label": "Argentina"
            },
            {
              "value": "Armenia",
              "label": "Armenia"
            },
            {
              "value": "Aruba",
              "label": "Aruba"
            },
            {
              "value": "Australia",
              "label": "Australia"
            },
            {
              "value": "Austria",
              "label": "Austria"
            },
            {
              "value": "Azerbaijan",
              "label": "Azerbaijan"
            },
            {
              "value": "Bahamas",
              "label": "Bahamas"
            },
            {
              "value": "Bahrain",
              "label": "Bahrain"
            },
            {
              "value": "Bangladesh",
              "label": "Bangladesh"
            },
            {
              "value": "Barbados",
              "label": "Barbados"
            },
            {
              "value": "Belarus",
              "label": "Belarus"
            },
            {
              "value": "Belgium",
              "label": "Belgium"
            },
            {
              "value": "Belize",
              "label": "Belize"
            },
            {
              "value": "Benin",
              "label": "Benin"
            },
            {
              "value": "Bermuda",
              "label": "Bermuda"
            },
            {
              "value": "Bhutan",
              "label": "Bhutan"
            },
            {
              "value": "Bolivia",
              "label": "Bolivia"
            },
            {
              "value": "Bonaire, Sint Eustatius, and Saba",
              "label": "Bonaire, Sint Eustatius, and Saba"
            },
            {
              "value": "Bosnia and Herzegovina",
              "label": "Bosnia and Herzegovina"
            },
            {
              "value": "Botswana",
              "label": "Botswana"
            },
            {
              "value": "Brazil",
              "label": "Brazil"
            },
            {
              "value": "British Indian Ocean Territory",
              "label": "British Indian Ocean Territory"
            },
            {
              "value": "British Virgin Islands",
              "label": "British Virgin Islands"
            },
            {
              "value": "Brunei",
              "label": "Brunei"
            },
            {
              "value": "Bulgaria",
              "label": "Bulgaria"
            },
            {
              "value": "Burkina Faso",
              "label": "Burkina Faso"
            },
            {
              "value": "Burundi",
              "label": "Burundi"
            },
            {
              "value": "Cambodia",
              "label": "Cambodia"
            },
            {
              "value": "Cameroon",
              "label": "Cameroon"
            },
            {
              "value": "Canada",
              "label": "Canada"
            },
            {
              "value": "Cape Verde",
              "label": "Cape Verde"
            },
            {
              "value": "Cayman Islands",
              "label": "Cayman Islands"
            },
            {
              "value": "Central African Republic",
              "label": "Central African Republic"
            },
            {
              "value": "Chad",
              "label": "Chad"
            },
            {
              "value": "Chile",
              "label": "Chile"
            },
            {
              "value": "China",
              "label": "China"
            },
            {
              "value": "Colombia",
              "label": "Colombia"
            },
            {
              "value": "Comoros",
              "label": "Comoros"
            },
            {
              "value": "Congo",
              "label": "Congo"
            },
            {
              "value": "Congo, Democratic Republic of",
              "label": "Congo, Democratic Republic of"
            },
            {
              "value": "Cook Islands",
              "label": "Cook Islands"
            },
            {
              "value": "Costa Rica",
              "label": "Costa Rica"
            },
            {
              "value": "C\u00f4te D'Ivoire",
              "label": "C\u00f4te D'Ivoire"
            },
            {
              "value": "Croatia",
              "label": "Croatia"
            },
            {
              "value": "Cuba",
              "label": "Cuba"
            },
            {
              "value": "Cura\u00e7ao",
              "label": "Cura\u00e7ao"
            },
            {
              "value": "Cyprus",
              "label": "Cyprus"
            },
            {
              "value": "Czech Republic",
              "label": "Czech Republic"
            },
            {
              "value": "Denmark",
              "label": "Denmark"
            },
            {
              "value": "Djibouti",
              "label": "Djibouti"
            },
            {
              "value": "Dominica",
              "label": "Dominica"
            },
            {
              "value": "Dominican Republic",
              "label": "Dominican Republic"
            },
            {
              "value": "Ecuador",
              "label": "Ecuador"
            },
            {
              "value": "Egypt",
              "label": "Egypt"
            },
            {
              "value": "El Salvador",
              "label": "El Salvador"
            },
            {
              "value": "Equatorial Guinea",
              "label": "Equatorial Guinea"
            },
            {
              "value": "Eritrea",
              "label": "Eritrea"
            },
            {
              "value": "Estonia",
              "label": "Estonia"
            },
            {
              "value": "Ethiopia",
              "label": "Ethiopia"
            },
            {
              "value": "Falkland Islands",
              "label": "Falkland Islands"
            },
            {
              "value": "Faroe Islands",
              "label": "Faroe Islands"
            },
            {
              "value": "Fiji",
              "label": "Fiji"
            },
            {
              "value": "Finland",
              "label": "Finland"
            },
            {
              "value": "France",
              "label": "France"
            },
            {
              "value": "French Guiana",
              "label": "French Guiana"
            },
            {
              "value": "French Polynesia",
              "label": "French Polynesia"
            },
            {
              "value": "Gabon",
              "label": "Gabon"
            },
            {
              "value": "Gambia",
              "label": "Gambia"
            },
            {
              "value": "Georgia",
              "label": "Georgia"
            },
            {
              "value": "Germany",
              "label": "Germany"
            },
            {
              "value": "Ghana",
              "label": "Ghana"
            },
            {
              "value": "Gibraltar",
              "label": "Gibraltar"
            },
            {
              "value": "Greece",
              "label": "Greece"
            },
            {
              "value": "Greenland",
              "label": "Greenland"
            },
            {
              "value": "Grenada",
              "label": "Grenada"
            },
            {
              "value": "Guadeloupe",
              "label": "Guadeloupe"
            },
            {
              "value": "Guam",
              "label": "Guam"
            },
            {
              "value": "Guatemala",
              "label": "Guatemala"
            },
            {
              "value": "Guernsey",
              "label": "Guernsey"
            },
            {
              "value": "Guinea",
              "label": "Guinea"
            },
            {
              "value": "Guinea-Bissau",
              "label": "Guinea-Bissau"
            },
            {
              "value": "Guyana",
              "label": "Guyana"
            },
            {
              "value": "Haiti",
              "label": "Haiti"
            },
            {
              "value": "Holy See (Vatican City State)",
              "label": "Holy See (Vatican City State)"
            },
            {
              "value": "Honduras",
              "label": "Honduras"
            },
            {
              "value": "Hong Kong",
              "label": "Hong Kong"
            },
            {
              "value": "Hungary",
              "label": "Hungary"
            },
            {
              "value": "Iceland",
              "label": "Iceland"
            },
            {
              "value": "India",
              "label": "India"
            },
            {
              "value": "Indonesia",
              "label": "Indonesia"
            },
            {
              "value": "Iran",
              "label": "Iran"
            },
            {
              "value": "Iraq",
              "label": "Iraq"
            },
            {
              "value": "Ireland",
              "label": "Ireland"
            },
            {
              "value": "Isle of Man",
              "label": "Isle of Man"
            },
            {
              "value": "Israel",
              "label": "Israel"
            },
            {
              "value": "Italy",
              "label": "Italy"
            },
            {
              "value": "Jamaica",
              "label": "Jamaica"
            },
            {
              "value": "Japan",
              "label": "Japan"
            },
            {
              "value": "Jersey",
              "label": "Jersey"
            },
            {
              "value": "Jordan",
              "label": "Jordan"
            },
            {
              "value": "Kazakhstan",
              "label": "Kazakhstan"
            },
            {
              "value": "Kenya",
              "label": "Kenya"
            },
            {
              "value": "Kiribati",
              "label": "Kiribati"
            },
            {
              "value": "Korea, Democratic People's Republic of",
              "label": "Korea, Democratic People's Republic of"
            },
            {
              "value": "Korea, Republic of",
              "label": "Korea, Republic of"
            },
            {
              "value": "Kosovo",
              "label": "Kosovo"
            },
            {
              "value": "Kuwait",
              "label": "Kuwait"
            },
            {
              "value": "Kyrgyzstan",
              "label": "Kyrgyzstan"
            },
            {
              "value": "Laos",
              "label": "Laos"
            },
            {
              "value": "Latvia",
              "label": "Latvia"
            },
            {
              "value": "Lebanon",
              "label": "Lebanon"
            },
            {
              "value": "Lesotho",
              "label": "Lesotho"
            },
            {
              "value": "Liberia",
              "label": "Liberia"
            },
            {
              "value": "Libya",
              "label": "Libya"
            },
            {
              "value": "Liechtenstein",
              "label": "Liechtenstein"
            },
            {
              "value": "Lithuania",
              "label": "Lithuania"
            },
            {
              "value": "Luxembourg",
              "label": "Luxembourg"
            },
            {
              "value": "Macao",
              "label": "Macao"
            },
            {
              "value": "Macedonia",
              "label": "Macedonia"
            },
            {
              "value": "Madagascar",
              "label": "Madagascar"
            },
            {
              "value": "Malawi",
              "label": "Malawi"
            },
            {
              "value": "Malaysia",
              "label": "Malaysia"
            },
            {
              "value": "Maldives",
              "label": "Maldives"
            },
            {
              "value": "Mali",
              "label": "Mali"
            },
            {
              "value": "Malta",
              "label": "Malta"
            },
            {
              "value": "Marshall Islands",
              "label": "Marshall Islands"
            },
            {
              "value": "Martinique",
              "label": "Martinique"
            },
            {
              "value": "Mauritania",
              "label": "Mauritania"
            },
            {
              "value": "Mauritius",
              "label": "Mauritius"
            },
            {
              "value": "Mexico",
              "label": "Mexico"
            },
            {
              "value": "Micronesia, Federated States of",
              "label": "Micronesia, Federated States of"
            },
            {
              "value": "Moldova",
              "label": "Moldova"
            },
            {
              "value": "Monaco",
              "label": "Monaco"
            },
            {
              "value": "Mongolia",
              "label": "Mongolia"
            },
            {
              "value": "Montenegro",
              "label": "Montenegro"
            },
            {
              "value": "Morocco",
              "label": "Morocco"
            },
            {
              "value": "Mozambique",
              "label": "Mozambique"
            },
            {
              "value": "Myanmar",
              "label": "Myanmar"
            },
            {
              "value": "Namibia",
              "label": "Namibia"
            },
            {
              "value": "Nauru",
              "label": "Nauru"
            },
            {
              "value": "Nepal",
              "label": "Nepal"
            },
            {
              "value": "Netherlands",
              "label": "Netherlands"
            },
            {
              "value": "New Caledonia",
              "label": "New Caledonia"
            },
            {
              "value": "New Zealand",
              "label": "New Zealand"
            },
            {
              "value": "Nicaragua",
              "label": "Nicaragua"
            },
            {
              "value": "Niger",
              "label": "Niger"
            },
            {
              "value": "Nigeria",
              "label": "Nigeria"
            },
            {
              "value": "Northern Mariana Islands",
              "label": "Northern Mariana Islands"
            },
            {
              "value": "Norway",
              "label": "Norway"
            },
            {
              "value": "Oman",
              "label": "Oman"
            },
            {
              "value": "Pakistan",
              "label": "Pakistan"
            },
            {
              "value": "Palau",
              "label": "Palau"
            },
            {
              "value": "Palestine",
              "label": "Palestine"
            },
            {
              "value": "Panama",
              "label": "Panama"
            },
            {
              "value": "Papua New Guinea",
              "label": "Papua New Guinea"
            },
            {
              "value": "Paraguay",
              "label": "Paraguay"
            },
            {
              "value": "Peru",
              "label": "Peru"
            },
            {
              "value": "Philippines",
              "label": "Philippines"
            },
            {
              "value": "Poland",
              "label": "Poland"
            },
            {
              "value": "Portugal",
              "label": "Portugal"
            },
            {
              "value": "Qatar",
              "label": "Qatar"
            },
            {
              "value": "Reunion",
              "label": "Reunion"
            },
            {
              "value": "Romania",
              "label": "Romania"
            },
            {
              "value": "Russian Federation",
              "label": "Russian Federation"
            },
            {
              "value": "Rwanda",
              "label": "Rwanda"
            },
            {
              "value": "Saint Kitts and Nevis",
              "label": "Saint Kitts and Nevis"
            },
            {
              "value": "Saint Lucia",
              "label": "Saint Lucia"
            },
            {
              "value": "Saint Vincent and the Grenadines",
              "label": "Saint Vincent and the Grenadines"
            },
            {
              "value": "Samoa",
              "label": "Samoa"
            },
            {
              "value": "San Marino",
              "label": "San Marino"
            },
            {
              "value": "Sao Tome and Principe",
              "label": "Sao Tome and Principe"
            },
            {
              "value": "Saudi Arabia",
              "label": "Saudi Arabia"
            },
            {
              "value": "Senegal",
              "label": "Senegal"
            },
            {
              "value": "Serbia",
              "label": "Serbia"
            },
            {
              "value": "Seychelles",
              "label": "Seychelles"
            },
            {
              "value": "Sierra Leone",
              "label": "Sierra Leone"
            },
            {
              "value": "Singapore",
              "label": "Singapore"
            },
            {
              "value": "Sint Maarten",
              "label": "Sint Maarten"
            },
            {
              "value": "Slovakia",
              "label": "Slovakia"
            },
            {
              "value": "Slovenia",
              "label": "Slovenia"
            },
            {
              "value": "Solomon Islands",
              "label": "Solomon Islands"
            },
            {
              "value": "Somalia",
              "label": "Somalia"
            },
            {
              "value": "South Africa",
              "label": "South Africa"
            },
            {
              "value": "South Sudan",
              "label": "South Sudan"
            },
            {
              "value": "Spain",
              "label": "Spain"
            },
            {
              "value": "Sri Lanka",
              "label": "Sri Lanka"
            },
            {
              "value": "Sudan",
              "label": "Sudan"
            },
            {
              "value": "Suriname",
              "label": "Suriname"
            },
            {
              "value": "Swaziland",
              "label": "Swaziland"
            },
            {
              "value": "Sweden",
              "label": "Sweden"
            },
            {
              "value": "Switzerland",
              "label": "Switzerland"
            },
            {
              "value": "Syria",
              "label": "Syria"
            },
            {
              "value": "Taiwan",
              "label": "Taiwan"
            },
            {
              "value": "Tajikistan",
              "label": "Tajikistan"
            },
            {
              "value": "Tanzania",
              "label": "Tanzania"
            },
            {
              "value": "Thailand",
              "label": "Thailand"
            },
            {
              "value": "Timor-Leste",
              "label": "Timor-Leste"
            },
            {
              "value": "Togo",
              "label": "Togo"
            },
            {
              "value": "Tonga",
              "label": "Tonga"
            },
            {
              "value": "Trinidad and Tobago",
              "label": "Trinidad and Tobago"
            },
            {
              "value": "Tunisia",
              "label": "Tunisia"
            },
            {
              "value": "Turkey",
              "label": "Turkey"
            },
            {
              "value": "Turkmenistan",
              "label": "Turkmenistan"
            },
            {
              "value": "Turks and Caicos Islands",
              "label": "Turks and Caicos Islands"
            },
            {
              "value": "Tuvalu",
              "label": "Tuvalu"
            },
            {
              "value": "U. S. Virgin Islands",
              "label": "U. S. Virgin Islands"
            },
            {
              "value": "Uganda",
              "label": "Uganda"
            },
            {
              "value": "Ukraine",
              "label": "Ukraine"
            },
            {
              "value": "United Arab Emirates",
              "label": "United Arab Emirates"
            },
            {
              "value": "United Kingdom",
              "label": "United Kingdom"
            },
            {
              "value": "United States Minor Outlying Islands",
              "label": "United States Minor Outlying Islands"
            },
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Uruguay",
              "label": "Uruguay"
            },
            {
              "value": "Uzbekistan",
              "label": "Uzbekistan"
            },
            {
              "value": "Vanuatu",
              "label": "Vanuatu"
            },
            {
              "value": "Venezuela",
              "label": "Venezuela"
            },
            {
              "value": "Vietnam",
              "label": "Vietnam"
            },
            {
              "value": "Western Sahara",
              "label": "Western Sahara"
            },
            {
              "value": "Yemen",
              "label": "Yemen"
            },
            {
              "value": "Zambia",
              "label": "Zambia"
            },
            {
              "value": "Zimbabwe",
              "label": "Zimbabwe"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Country",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country column does not match any of the drop down values. Country names need to be spelled out."
            }
          ]
        }
      },
      {
        "key": "Country Code",
        "label": "Country Code",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "AFG",
              "label": "AFG"
            },
            {
              "value": "ALB",
              "label": "ALB"
            },
            {
              "value": "DZA",
              "label": "DZA"
            },
            {
              "value": "ASM",
              "label": "ASM"
            },
            {
              "value": "AND",
              "label": "AND"
            },
            {
              "value": "AGO",
              "label": "AGO"
            },
            {
              "value": "AIA",
              "label": "AIA"
            },
            {
              "value": "ATG",
              "label": "ATG"
            },
            {
              "value": "ARG",
              "label": "ARG"
            },
            {
              "value": "ARM",
              "label": "ARM"
            },
            {
              "value": "ABW",
              "label": "ABW"
            },
            {
              "value": "AUS",
              "label": "AUS"
            },
            {
              "value": "AUT",
              "label": "AUT"
            },
            {
              "value": "AZE",
              "label": "AZE"
            },
            {
              "value": "BHS",
              "label": "BHS"
            },
            {
              "value": "BHR",
              "label": "BHR"
            },
            {
              "value": "BGD",
              "label": "BGD"
            },
            {
              "value": "BRB",
              "label": "BRB"
            },
            {
              "value": "BLR",
              "label": "BLR"
            },
            {
              "value": "BEL",
              "label": "BEL"
            },
            {
              "value": "BLZ",
              "label": "BLZ"
            },
            {
              "value": "BEN",
              "label": "BEN"
            },
            {
              "value": "BMU",
              "label": "BMU"
            },
            {
              "value": "BTN",
              "label": "BTN"
            },
            {
              "value": "BOL",
              "label": "BOL"
            },
            {
              "value": "BES",
              "label": "BES"
            },
            {
              "value": "BIH",
              "label": "BIH"
            },
            {
              "value": "BWA",
              "label": "BWA"
            },
            {
              "value": "BRA",
              "label": "BRA"
            },
            {
              "value": "IOT",
              "label": "IOT"
            },
            {
              "value": "VGB",
              "label": "VGB"
            },
            {
              "value": "BRN",
              "label": "BRN"
            },
            {
              "value": "BGR",
              "label": "BGR"
            },
            {
              "value": "BFA",
              "label": "BFA"
            },
            {
              "value": "BDI",
              "label": "BDI"
            },
            {
              "value": "KHM",
              "label": "KHM"
            },
            {
              "value": "CMR",
              "label": "CMR"
            },
            {
              "value": "CAN",
              "label": "CAN"
            },
            {
              "value": "CPV",
              "label": "CPV"
            },
            {
              "value": "CYM",
              "label": "CYM"
            },
            {
              "value": "CAF",
              "label": "CAF"
            },
            {
              "value": "TCD",
              "label": "TCD"
            },
            {
              "value": "CHL",
              "label": "CHL"
            },
            {
              "value": "CHN",
              "label": "CHN"
            },
            {
              "value": "COL",
              "label": "COL"
            },
            {
              "value": "COM",
              "label": "COM"
            },
            {
              "value": "COG",
              "label": "COG"
            },
            {
              "value": "COD",
              "label": "COD"
            },
            {
              "value": "COK",
              "label": "COK"
            },
            {
              "value": "CRI",
              "label": "CRI"
            },
            {
              "value": "CIV",
              "label": "CIV"
            },
            {
              "value": "HRV",
              "label": "HRV"
            },
            {
              "value": "CUB",
              "label": "CUB"
            },
            {
              "value": "CUW",
              "label": "CUW"
            },
            {
              "value": "CYP",
              "label": "CYP"
            },
            {
              "value": "CZE",
              "label": "CZE"
            },
            {
              "value": "DNK",
              "label": "DNK"
            },
            {
              "value": "DJI",
              "label": "DJI"
            },
            {
              "value": "DMA",
              "label": "DMA"
            },
            {
              "value": "DOM",
              "label": "DOM"
            },
            {
              "value": "ECU",
              "label": "ECU"
            },
            {
              "value": "EGY",
              "label": "EGY"
            },
            {
              "value": "SLV",
              "label": "SLV"
            },
            {
              "value": "GNQ",
              "label": "GNQ"
            },
            {
              "value": "ERI",
              "label": "ERI"
            },
            {
              "value": "EST",
              "label": "EST"
            },
            {
              "value": "ETH",
              "label": "ETH"
            },
            {
              "value": "FLK",
              "label": "FLK"
            },
            {
              "value": "FRO",
              "label": "FRO"
            },
            {
              "value": "FJI",
              "label": "FJI"
            },
            {
              "value": "FIN",
              "label": "FIN"
            },
            {
              "value": "FRA",
              "label": "FRA"
            },
            {
              "value": "GUF",
              "label": "GUF"
            },
            {
              "value": "PYF",
              "label": "PYF"
            },
            {
              "value": "GAB",
              "label": "GAB"
            },
            {
              "value": "GMB",
              "label": "GMB"
            },
            {
              "value": "GEO",
              "label": "GEO"
            },
            {
              "value": "DEU",
              "label": "DEU"
            },
            {
              "value": "GHA",
              "label": "GHA"
            },
            {
              "value": "GIB",
              "label": "GIB"
            },
            {
              "value": "GRC",
              "label": "GRC"
            },
            {
              "value": "GRL",
              "label": "GRL"
            },
            {
              "value": "GRD",
              "label": "GRD"
            },
            {
              "value": "GLP",
              "label": "GLP"
            },
            {
              "value": "GUM",
              "label": "GUM"
            },
            {
              "value": "GTM",
              "label": "GTM"
            },
            {
              "value": "GGY",
              "label": "GGY"
            },
            {
              "value": "GIN",
              "label": "GIN"
            },
            {
              "value": "GNB",
              "label": "GNB"
            },
            {
              "value": "GUY",
              "label": "GUY"
            },
            {
              "value": "HTI",
              "label": "HTI"
            },
            {
              "value": "VAT",
              "label": "VAT"
            },
            {
              "value": "HND",
              "label": "HND"
            },
            {
              "value": "HKG",
              "label": "HKG"
            },
            {
              "value": "HUN",
              "label": "HUN"
            },
            {
              "value": "ISL",
              "label": "ISL"
            },
            {
              "value": "IND",
              "label": "IND"
            },
            {
              "value": "IDN",
              "label": "IDN"
            },
            {
              "value": "IRN",
              "label": "IRN"
            },
            {
              "value": "IRQ",
              "label": "IRQ"
            },
            {
              "value": "IRL",
              "label": "IRL"
            },
            {
              "value": "IMN",
              "label": "IMN"
            },
            {
              "value": "ISR",
              "label": "ISR"
            },
            {
              "value": "ITA",
              "label": "ITA"
            },
            {
              "value": "JAM",
              "label": "JAM"
            },
            {
              "value": "JPN",
              "label": "JPN"
            },
            {
              "value": "JEY",
              "label": "JEY"
            },
            {
              "value": "JOR",
              "label": "JOR"
            },
            {
              "value": "KAZ",
              "label": "KAZ"
            },
            {
              "value": "KEN",
              "label": "KEN"
            },
            {
              "value": "KIR",
              "label": "KIR"
            },
            {
              "value": "PRK",
              "label": "PRK"
            },
            {
              "value": "KOR",
              "label": "KOR"
            },
            {
              "value": "KSV",
              "label": "KSV"
            },
            {
              "value": "KWT",
              "label": "KWT"
            },
            {
              "value": "KGZ",
              "label": "KGZ"
            },
            {
              "value": "LAO",
              "label": "LAO"
            },
            {
              "value": "LVA",
              "label": "LVA"
            },
            {
              "value": "LBN",
              "label": "LBN"
            },
            {
              "value": "LSO",
              "label": "LSO"
            },
            {
              "value": "LBR",
              "label": "LBR"
            },
            {
              "value": "LBY",
              "label": "LBY"
            },
            {
              "value": "LIE",
              "label": "LIE"
            },
            {
              "value": "LTU",
              "label": "LTU"
            },
            {
              "value": "LUX",
              "label": "LUX"
            },
            {
              "value": "MAC",
              "label": "MAC"
            },
            {
              "value": "MKD",
              "label": "MKD"
            },
            {
              "value": "MDG",
              "label": "MDG"
            },
            {
              "value": "MWI",
              "label": "MWI"
            },
            {
              "value": "MYS",
              "label": "MYS"
            },
            {
              "value": "MDV",
              "label": "MDV"
            },
            {
              "value": "MLI",
              "label": "MLI"
            },
            {
              "value": "MLT",
              "label": "MLT"
            },
            {
              "value": "MHL",
              "label": "MHL"
            },
            {
              "value": "MTQ",
              "label": "MTQ"
            },
            {
              "value": "MRT",
              "label": "MRT"
            },
            {
              "value": "MUS",
              "label": "MUS"
            },
            {
              "value": "MEX",
              "label": "MEX"
            },
            {
              "value": "FSM",
              "label": "FSM"
            },
            {
              "value": "MDA",
              "label": "MDA"
            },
            {
              "value": "MCO",
              "label": "MCO"
            },
            {
              "value": "MNG",
              "label": "MNG"
            },
            {
              "value": "MNE",
              "label": "MNE"
            },
            {
              "value": "MAR",
              "label": "MAR"
            },
            {
              "value": "MOZ",
              "label": "MOZ"
            },
            {
              "value": "MMR",
              "label": "MMR"
            },
            {
              "value": "NAM",
              "label": "NAM"
            },
            {
              "value": "NRU",
              "label": "NRU"
            },
            {
              "value": "NPL",
              "label": "NPL"
            },
            {
              "value": "NLD",
              "label": "NLD"
            },
            {
              "value": "NCL",
              "label": "NCL"
            },
            {
              "value": "NZL",
              "label": "NZL"
            },
            {
              "value": "NIC",
              "label": "NIC"
            },
            {
              "value": "NER",
              "label": "NER"
            },
            {
              "value": "NGA",
              "label": "NGA"
            },
            {
              "value": "MNP",
              "label": "MNP"
            },
            {
              "value": "NOR",
              "label": "NOR"
            },
            {
              "value": "OMN",
              "label": "OMN"
            },
            {
              "value": "PAK",
              "label": "PAK"
            },
            {
              "value": "PLW",
              "label": "PLW"
            },
            {
              "value": "PSE",
              "label": "PSE"
            },
            {
              "value": "PAN",
              "label": "PAN"
            },
            {
              "value": "PNG",
              "label": "PNG"
            },
            {
              "value": "PRY",
              "label": "PRY"
            },
            {
              "value": "PER",
              "label": "PER"
            },
            {
              "value": "PHL",
              "label": "PHL"
            },
            {
              "value": "POL",
              "label": "POL"
            },
            {
              "value": "PRT",
              "label": "PRT"
            },
            {
              "value": "QAT",
              "label": "QAT"
            },
            {
              "value": "REU",
              "label": "REU"
            },
            {
              "value": "ROU",
              "label": "ROU"
            },
            {
              "value": "RUS",
              "label": "RUS"
            },
            {
              "value": "RWA",
              "label": "RWA"
            },
            {
              "value": "KNA",
              "label": "KNA"
            },
            {
              "value": "LCA",
              "label": "LCA"
            },
            {
              "value": "VCT",
              "label": "VCT"
            },
            {
              "value": "WSM",
              "label": "WSM"
            },
            {
              "value": "SMR",
              "label": "SMR"
            },
            {
              "value": "STP",
              "label": "STP"
            },
            {
              "value": "SAU",
              "label": "SAU"
            },
            {
              "value": "SEN",
              "label": "SEN"
            },
            {
              "value": "SRB",
              "label": "SRB"
            },
            {
              "value": "SYC",
              "label": "SYC"
            },
            {
              "value": "SLE",
              "label": "SLE"
            },
            {
              "value": "SGP",
              "label": "SGP"
            },
            {
              "value": "SXM",
              "label": "SXM"
            },
            {
              "value": "SVK",
              "label": "SVK"
            },
            {
              "value": "SVN",
              "label": "SVN"
            },
            {
              "value": "SLB",
              "label": "SLB"
            },
            {
              "value": "SOM",
              "label": "SOM"
            },
            {
              "value": "ZAF",
              "label": "ZAF"
            },
            {
              "value": "SSD",
              "label": "SSD"
            },
            {
              "value": "ESP",
              "label": "ESP"
            },
            {
              "value": "LKA",
              "label": "LKA"
            },
            {
              "value": "SDN",
              "label": "SDN"
            },
            {
              "value": "SUR",
              "label": "SUR"
            },
            {
              "value": "SWZ",
              "label": "SWZ"
            },
            {
              "value": "SWE",
              "label": "SWE"
            },
            {
              "value": "CHE",
              "label": "CHE"
            },
            {
              "value": "SYR",
              "label": "SYR"
            },
            {
              "value": "TWN",
              "label": "TWN"
            },
            {
              "value": "TJK",
              "label": "TJK"
            },
            {
              "value": "TZA",
              "label": "TZA"
            },
            {
              "value": "THA",
              "label": "THA"
            },
            {
              "value": "TLS",
              "label": "TLS"
            },
            {
              "value": "TGO",
              "label": "TGO"
            },
            {
              "value": "TON",
              "label": "TON"
            },
            {
              "value": "TTO",
              "label": "TTO"
            },
            {
              "value": "TUN",
              "label": "TUN"
            },
            {
              "value": "TUR",
              "label": "TUR"
            },
            {
              "value": "TKM",
              "label": "TKM"
            },
            {
              "value": "TCA",
              "label": "TCA"
            },
            {
              "value": "TUV",
              "label": "TUV"
            },
            {
              "value": "VIR",
              "label": "VIR"
            },
            {
              "value": "UGA",
              "label": "UGA"
            },
            {
              "value": "UKR",
              "label": "UKR"
            },
            {
              "value": "ARE",
              "label": "ARE"
            },
            {
              "value": "GBR",
              "label": "GBR"
            },
            {
              "value": "UMI",
              "label": "UMI"
            },
            {
              "value": "USA",
              "label": "USA"
            },
            {
              "value": "URY",
              "label": "URY"
            },
            {
              "value": "UZB",
              "label": "UZB"
            },
            {
              "value": "VUT",
              "label": "VUT"
            },
            {
              "value": "VEN",
              "label": "VEN"
            },
            {
              "value": "VNM",
              "label": "VNM"
            },
            {
              "value": "ESH",
              "label": "ESH"
            },
            {
              "value": "YEM",
              "label": "YEM"
            },
            {
              "value": "ZMB",
              "label": "ZMB"
            },
            {
              "value": "ZWE",
              "label": "ZWE"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "CountryCode",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country Code must match one of the drop downs."
            }
          ]
        }
      },
      {
        "key": "Currency Code",
        "label": "Currency Code",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "USD",
              "label": "USD"
            },
            {
              "value": "AED",
              "label": "AED"
            },
            {
              "value": "AFN",
              "label": "AFN"
            },
            {
              "value": "ALL",
              "label": "ALL"
            },
            {
              "value": "AMD",
              "label": "AMD"
            },
            {
              "value": "ANG",
              "label": "ANG"
            },
            {
              "value": "AOA",
              "label": "AOA"
            },
            {
              "value": "ARS",
              "label": "ARS"
            },
            {
              "value": "AUD",
              "label": "AUD"
            },
            {
              "value": "AWG",
              "label": "AWG"
            },
            {
              "value": "AZN",
              "label": "AZN"
            },
            {
              "value": "BAM",
              "label": "BAM"
            },
            {
              "value": "BBD",
              "label": "BBD"
            },
            {
              "value": "BDT",
              "label": "BDT"
            },
            {
              "value": "BGN",
              "label": "BGN"
            },
            {
              "value": "BHD",
              "label": "BHD"
            },
            {
              "value": "BIF",
              "label": "BIF"
            },
            {
              "value": "BMD",
              "label": "BMD"
            },
            {
              "value": "BND",
              "label": "BND"
            },
            {
              "value": "BOB",
              "label": "BOB"
            },
            {
              "value": "BRL",
              "label": "BRL"
            },
            {
              "value": "BSD",
              "label": "BSD"
            },
            {
              "value": "BTN",
              "label": "BTN"
            },
            {
              "value": "BWP",
              "label": "BWP"
            },
            {
              "value": "BYR",
              "label": "BYR"
            },
            {
              "value": "BZD",
              "label": "BZD"
            },
            {
              "value": "CAD",
              "label": "CAD"
            },
            {
              "value": "CDF",
              "label": "CDF"
            },
            {
              "value": "CHF",
              "label": "CHF"
            },
            {
              "value": "CLP",
              "label": "CLP"
            },
            {
              "value": "CNY",
              "label": "CNY"
            },
            {
              "value": "COP",
              "label": "COP"
            },
            {
              "value": "CRC",
              "label": "CRC"
            },
            {
              "value": "CUP",
              "label": "CUP"
            },
            {
              "value": "CVE",
              "label": "CVE"
            },
            {
              "value": "CZK",
              "label": "CZK"
            },
            {
              "value": "DJF",
              "label": "DJF"
            },
            {
              "value": "DKK",
              "label": "DKK"
            },
            {
              "value": "DOP",
              "label": "DOP"
            },
            {
              "value": "DZD",
              "label": "DZD"
            },
            {
              "value": "EGP",
              "label": "EGP"
            },
            {
              "value": "ERN",
              "label": "ERN"
            },
            {
              "value": "ETB",
              "label": "ETB"
            },
            {
              "value": "EUR",
              "label": "EUR"
            },
            {
              "value": "FJD",
              "label": "FJD"
            },
            {
              "value": "GBP",
              "label": "GBP"
            },
            {
              "value": "GEL",
              "label": "GEL"
            },
            {
              "value": "GHS",
              "label": "GHS"
            },
            {
              "value": "GMD",
              "label": "GMD"
            },
            {
              "value": "GNF",
              "label": "GNF"
            },
            {
              "value": "GTQ",
              "label": "GTQ"
            },
            {
              "value": "GYD",
              "label": "GYD"
            },
            {
              "value": "HKD",
              "label": "HKD"
            },
            {
              "value": "HNL",
              "label": "HNL"
            },
            {
              "value": "HRK",
              "label": "HRK"
            },
            {
              "value": "HUF",
              "label": "HUF"
            },
            {
              "value": "IDR",
              "label": "IDR"
            },
            {
              "value": "ILS",
              "label": "ILS"
            },
            {
              "value": "INR",
              "label": "INR"
            },
            {
              "value": "IQD",
              "label": "IQD"
            },
            {
              "value": "IRR",
              "label": "IRR"
            },
            {
              "value": "ISK",
              "label": "ISK"
            },
            {
              "value": "JMD",
              "label": "JMD"
            },
            {
              "value": "JOD",
              "label": "JOD"
            },
            {
              "value": "JPY",
              "label": "JPY"
            },
            {
              "value": "KES",
              "label": "KES"
            },
            {
              "value": "KGS",
              "label": "KGS"
            },
            {
              "value": "KHR",
              "label": "KHR"
            },
            {
              "value": "KMF",
              "label": "KMF"
            },
            {
              "value": "KPW",
              "label": "KPW"
            },
            {
              "value": "KRW",
              "label": "KRW"
            },
            {
              "value": "KWD",
              "label": "KWD"
            },
            {
              "value": "KYD",
              "label": "KYD"
            },
            {
              "value": "KZT",
              "label": "KZT"
            },
            {
              "value": "LAK",
              "label": "LAK"
            },
            {
              "value": "LBP",
              "label": "LBP"
            },
            {
              "value": "LKR",
              "label": "LKR"
            },
            {
              "value": "LRD",
              "label": "LRD"
            },
            {
              "value": "LTL",
              "label": "LTL"
            },
            {
              "value": "LVL",
              "label": "LVL"
            },
            {
              "value": "LYD",
              "label": "LYD"
            },
            {
              "value": "MAD",
              "label": "MAD"
            },
            {
              "value": "MDL",
              "label": "MDL"
            },
            {
              "value": "MGA",
              "label": "MGA"
            },
            {
              "value": "MKD",
              "label": "MKD"
            },
            {
              "value": "MMK",
              "label": "MMK"
            },
            {
              "value": "MNT",
              "label": "MNT"
            },
            {
              "value": "MOP",
              "label": "MOP"
            },
            {
              "value": "MRO",
              "label": "MRO"
            },
            {
              "value": "MUR",
              "label": "MUR"
            },
            {
              "value": "MVR",
              "label": "MVR"
            },
            {
              "value": "MWK",
              "label": "MWK"
            },
            {
              "value": "MXN",
              "label": "MXN"
            },
            {
              "value": "MYR",
              "label": "MYR"
            },
            {
              "value": "MZN",
              "label": "MZN"
            },
            {
              "value": "NGN",
              "label": "NGN"
            },
            {
              "value": "NIO",
              "label": "NIO"
            },
            {
              "value": "NOK",
              "label": "NOK"
            },
            {
              "value": "NPR",
              "label": "NPR"
            },
            {
              "value": "NZD",
              "label": "NZD"
            },
            {
              "value": "OMR",
              "label": "OMR"
            },
            {
              "value": "PEN",
              "label": "PEN"
            },
            {
              "value": "PGK",
              "label": "PGK"
            },
            {
              "value": "PHP",
              "label": "PHP"
            },
            {
              "value": "PKR",
              "label": "PKR"
            },
            {
              "value": "PLN",
              "label": "PLN"
            },
            {
              "value": "PYG",
              "label": "PYG"
            },
            {
              "value": "QAR",
              "label": "QAR"
            },
            {
              "value": "RON",
              "label": "RON"
            },
            {
              "value": "RSD",
              "label": "RSD"
            },
            {
              "value": "RUB",
              "label": "RUB"
            },
            {
              "value": "RWF",
              "label": "RWF"
            },
            {
              "value": "SAR",
              "label": "SAR"
            },
            {
              "value": "SBD",
              "label": "SBD"
            },
            {
              "value": "SCR",
              "label": "SCR"
            },
            {
              "value": "SDG",
              "label": "SDG"
            },
            {
              "value": "SEK",
              "label": "SEK"
            },
            {
              "value": "SGD",
              "label": "SGD"
            },
            {
              "value": "SLL",
              "label": "SLL"
            },
            {
              "value": "SOS",
              "label": "SOS"
            },
            {
              "value": "SRD",
              "label": "SRD"
            },
            {
              "value": "STD",
              "label": "STD"
            },
            {
              "value": "SYP",
              "label": "SYP"
            },
            {
              "value": "SZL",
              "label": "SZL"
            },
            {
              "value": "THB",
              "label": "THB"
            },
            {
              "value": "TJS",
              "label": "TJS"
            },
            {
              "value": "TMM",
              "label": "TMM"
            },
            {
              "value": "TND",
              "label": "TND"
            },
            {
              "value": "TOP",
              "label": "TOP"
            },
            {
              "value": "TRY",
              "label": "TRY"
            },
            {
              "value": "TTD",
              "label": "TTD"
            },
            {
              "value": "TWD",
              "label": "TWD"
            },
            {
              "value": "TZS",
              "label": "TZS"
            },
            {
              "value": "UAH",
              "label": "UAH"
            },
            {
              "value": "UGX",
              "label": "UGX"
            },
            {
              "value": "UYU",
              "label": "UYU"
            },
            {
              "value": "UZS",
              "label": "UZS"
            },
            {
              "value": "VEF",
              "label": "VEF"
            },
            {
              "value": "VND",
              "label": "VND"
            },
            {
              "value": "VUV",
              "label": "VUV"
            },
            {
              "value": "WST",
              "label": "WST"
            },
            {
              "value": "XAF",
              "label": "XAF"
            },
            {
              "value": "XCD",
              "label": "XCD"
            },
            {
              "value": "XOF",
              "label": "XOF"
            },
            {
              "value": "XPF",
              "label": "XPF"
            },
            {
              "value": "YER",
              "label": "YER"
            },
            {
              "value": "ZAR",
              "label": "ZAR"
            },
            {
              "value": "ZMK",
              "label": "ZMK"
            },
            {
              "value": "ZWD",
              "label": "ZWD"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Currency",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Currency must match one of the drop down values."
            }
          ]
        }
      },
      {
        "key": "Bank/Financial Institution",
        "label": "Bank/Financial Institution",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Financial Institutions",
          "key": "Financial Institution Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Financial Institution is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Financial Institutions",
              "Compare Column": "Financial Institution Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Bank/Financial Institution must match one of the banks in the financial institutions tab."
            }
          ]
        }
      },
      {
        "key": "Roll Number",
        "label": "Roll Number",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Name on Account",
        "label": "Name on Account",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Bank Statement Format",
        "label": "Bank Statement Format",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "ISO 20022",
              "label": "ISO 20022"
            },
            {
              "value": "BAI2",
              "label": "BAI2"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Ad Hoc Payments",
        "label": "Used by Ad Hoc Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Cash Advances",
        "label": "Used by Cash Advances",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Customer Payments",
        "label": "Used by Customer Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Cash",
        "label": "Used by Cash",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Expense Credit Card Payments",
        "label": "Used by Expense Credit Card Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Expense Payments",
        "label": "Used by Expense Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Intercompany Payments",
        "label": "Used by Intercompany Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Payroll Off-Cycle",
        "label": "Used by Payroll Off-Cycle",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Payroll",
        "label": "Used by Payroll",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Prenote Payments",
        "label": "Used by Prenote Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Procurement Card Payments",
        "label": "Used by Procurement Card Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Supplier Payments",
        "label": "Used by Supplier Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Used by Tax Payments",
        "label": "Used by Tax Payments",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Allowed Payment Type 1",
        "label": "Allowed Payment Type 1",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            },
            {
              "value": "Manual",
              "label": "Manual"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Allowed Payment Type 1 is a required and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "PaymentTypes",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Allowed Payment Type 1 column does not match any of the drop down values."
            }
          ]
        }
      },
      {
        "key": "Allowed Payment Type 2",
        "label": "Allowed Payment Type 2",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            },
            {
              "value": "Manual",
              "label": "Manual"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Allowed Payment Type 2 is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "PaymentTypes",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Allowed Payment Type 2 column does not match any of the drop down values."
            }
          ]
        }
      },
      {
        "key": "Allowed Payment Type 3",
        "label": "Allowed Payment Type 3",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            },
            {
              "value": "Manual",
              "label": "Manual"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Allowed Payment Type 3 is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "PaymentTypes",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Allowed Payment Type 3 column does not match any of the drop down values."
            }
          ]
        }
      },
      {
        "key": "Enable Positive Pay",
        "label": "Enable Positive Pay",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Enable Positive Pay column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Last Check Number Used",
        "label": "Last Check Number Used",
        "type": "string",
        "metadata": {
          "validations": [
            "Numeric"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Numeric",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Last Check Number Used column should contain numeric values only."
            }
          ]
        }
      },
      {
        "key": "Status",
        "label": "Status",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Comment",
        "label": "Comment",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Account Name",
        "label": "OB Account Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Organization",
        "label": "OB Organization",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Account Currency",
        "label": "OB Account Currency",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "USD",
              "label": "USD"
            },
            {
              "value": "AED",
              "label": "AED"
            },
            {
              "value": "AFN",
              "label": "AFN"
            },
            {
              "value": "ALL",
              "label": "ALL"
            },
            {
              "value": "AMD",
              "label": "AMD"
            },
            {
              "value": "ANG",
              "label": "ANG"
            },
            {
              "value": "AOA",
              "label": "AOA"
            },
            {
              "value": "ARS",
              "label": "ARS"
            },
            {
              "value": "AUD",
              "label": "AUD"
            },
            {
              "value": "AWG",
              "label": "AWG"
            },
            {
              "value": "AZN",
              "label": "AZN"
            },
            {
              "value": "BAM",
              "label": "BAM"
            },
            {
              "value": "BBD",
              "label": "BBD"
            },
            {
              "value": "BDT",
              "label": "BDT"
            },
            {
              "value": "BGN",
              "label": "BGN"
            },
            {
              "value": "BHD",
              "label": "BHD"
            },
            {
              "value": "BIF",
              "label": "BIF"
            },
            {
              "value": "BMD",
              "label": "BMD"
            },
            {
              "value": "BND",
              "label": "BND"
            },
            {
              "value": "BOB",
              "label": "BOB"
            },
            {
              "value": "BRL",
              "label": "BRL"
            },
            {
              "value": "BSD",
              "label": "BSD"
            },
            {
              "value": "BTN",
              "label": "BTN"
            },
            {
              "value": "BWP",
              "label": "BWP"
            },
            {
              "value": "BYR",
              "label": "BYR"
            },
            {
              "value": "BZD",
              "label": "BZD"
            },
            {
              "value": "CAD",
              "label": "CAD"
            },
            {
              "value": "CDF",
              "label": "CDF"
            },
            {
              "value": "CHF",
              "label": "CHF"
            },
            {
              "value": "CLP",
              "label": "CLP"
            },
            {
              "value": "CNY",
              "label": "CNY"
            },
            {
              "value": "COP",
              "label": "COP"
            },
            {
              "value": "CRC",
              "label": "CRC"
            },
            {
              "value": "CUP",
              "label": "CUP"
            },
            {
              "value": "CVE",
              "label": "CVE"
            },
            {
              "value": "CZK",
              "label": "CZK"
            },
            {
              "value": "DJF",
              "label": "DJF"
            },
            {
              "value": "DKK",
              "label": "DKK"
            },
            {
              "value": "DOP",
              "label": "DOP"
            },
            {
              "value": "DZD",
              "label": "DZD"
            },
            {
              "value": "EGP",
              "label": "EGP"
            },
            {
              "value": "ERN",
              "label": "ERN"
            },
            {
              "value": "ETB",
              "label": "ETB"
            },
            {
              "value": "EUR",
              "label": "EUR"
            },
            {
              "value": "FJD",
              "label": "FJD"
            },
            {
              "value": "GBP",
              "label": "GBP"
            },
            {
              "value": "GEL",
              "label": "GEL"
            },
            {
              "value": "GHS",
              "label": "GHS"
            },
            {
              "value": "GMD",
              "label": "GMD"
            },
            {
              "value": "GNF",
              "label": "GNF"
            },
            {
              "value": "GTQ",
              "label": "GTQ"
            },
            {
              "value": "GYD",
              "label": "GYD"
            },
            {
              "value": "HKD",
              "label": "HKD"
            },
            {
              "value": "HNL",
              "label": "HNL"
            },
            {
              "value": "HRK",
              "label": "HRK"
            },
            {
              "value": "HUF",
              "label": "HUF"
            },
            {
              "value": "IDR",
              "label": "IDR"
            },
            {
              "value": "ILS",
              "label": "ILS"
            },
            {
              "value": "INR",
              "label": "INR"
            },
            {
              "value": "IQD",
              "label": "IQD"
            },
            {
              "value": "IRR",
              "label": "IRR"
            },
            {
              "value": "ISK",
              "label": "ISK"
            },
            {
              "value": "JMD",
              "label": "JMD"
            },
            {
              "value": "JOD",
              "label": "JOD"
            },
            {
              "value": "JPY",
              "label": "JPY"
            },
            {
              "value": "KES",
              "label": "KES"
            },
            {
              "value": "KGS",
              "label": "KGS"
            },
            {
              "value": "KHR",
              "label": "KHR"
            },
            {
              "value": "KMF",
              "label": "KMF"
            },
            {
              "value": "KPW",
              "label": "KPW"
            },
            {
              "value": "KRW",
              "label": "KRW"
            },
            {
              "value": "KWD",
              "label": "KWD"
            },
            {
              "value": "KYD",
              "label": "KYD"
            },
            {
              "value": "KZT",
              "label": "KZT"
            },
            {
              "value": "LAK",
              "label": "LAK"
            },
            {
              "value": "LBP",
              "label": "LBP"
            },
            {
              "value": "LKR",
              "label": "LKR"
            },
            {
              "value": "LRD",
              "label": "LRD"
            },
            {
              "value": "LTL",
              "label": "LTL"
            },
            {
              "value": "LVL",
              "label": "LVL"
            },
            {
              "value": "LYD",
              "label": "LYD"
            },
            {
              "value": "MAD",
              "label": "MAD"
            },
            {
              "value": "MDL",
              "label": "MDL"
            },
            {
              "value": "MGA",
              "label": "MGA"
            },
            {
              "value": "MKD",
              "label": "MKD"
            },
            {
              "value": "MMK",
              "label": "MMK"
            },
            {
              "value": "MNT",
              "label": "MNT"
            },
            {
              "value": "MOP",
              "label": "MOP"
            },
            {
              "value": "MRO",
              "label": "MRO"
            },
            {
              "value": "MUR",
              "label": "MUR"
            },
            {
              "value": "MVR",
              "label": "MVR"
            },
            {
              "value": "MWK",
              "label": "MWK"
            },
            {
              "value": "MXN",
              "label": "MXN"
            },
            {
              "value": "MYR",
              "label": "MYR"
            },
            {
              "value": "MZN",
              "label": "MZN"
            },
            {
              "value": "NGN",
              "label": "NGN"
            },
            {
              "value": "NIO",
              "label": "NIO"
            },
            {
              "value": "NOK",
              "label": "NOK"
            },
            {
              "value": "NPR",
              "label": "NPR"
            },
            {
              "value": "NZD",
              "label": "NZD"
            },
            {
              "value": "OMR",
              "label": "OMR"
            },
            {
              "value": "PEN",
              "label": "PEN"
            },
            {
              "value": "PGK",
              "label": "PGK"
            },
            {
              "value": "PHP",
              "label": "PHP"
            },
            {
              "value": "PKR",
              "label": "PKR"
            },
            {
              "value": "PLN",
              "label": "PLN"
            },
            {
              "value": "PYG",
              "label": "PYG"
            },
            {
              "value": "QAR",
              "label": "QAR"
            },
            {
              "value": "RON",
              "label": "RON"
            },
            {
              "value": "RSD",
              "label": "RSD"
            },
            {
              "value": "RUB",
              "label": "RUB"
            },
            {
              "value": "RWF",
              "label": "RWF"
            },
            {
              "value": "SAR",
              "label": "SAR"
            },
            {
              "value": "SBD",
              "label": "SBD"
            },
            {
              "value": "SCR",
              "label": "SCR"
            },
            {
              "value": "SDG",
              "label": "SDG"
            },
            {
              "value": "SEK",
              "label": "SEK"
            },
            {
              "value": "SGD",
              "label": "SGD"
            },
            {
              "value": "SLL",
              "label": "SLL"
            },
            {
              "value": "SOS",
              "label": "SOS"
            },
            {
              "value": "SRD",
              "label": "SRD"
            },
            {
              "value": "STD",
              "label": "STD"
            },
            {
              "value": "SYP",
              "label": "SYP"
            },
            {
              "value": "SZL",
              "label": "SZL"
            },
            {
              "value": "THB",
              "label": "THB"
            },
            {
              "value": "TJS",
              "label": "TJS"
            },
            {
              "value": "TMM",
              "label": "TMM"
            },
            {
              "value": "TND",
              "label": "TND"
            },
            {
              "value": "TOP",
              "label": "TOP"
            },
            {
              "value": "TRY",
              "label": "TRY"
            },
            {
              "value": "TTD",
              "label": "TTD"
            },
            {
              "value": "TWD",
              "label": "TWD"
            },
            {
              "value": "TZS",
              "label": "TZS"
            },
            {
              "value": "UAH",
              "label": "UAH"
            },
            {
              "value": "UGX",
              "label": "UGX"
            },
            {
              "value": "UYU",
              "label": "UYU"
            },
            {
              "value": "UZS",
              "label": "UZS"
            },
            {
              "value": "VEF",
              "label": "VEF"
            },
            {
              "value": "VND",
              "label": "VND"
            },
            {
              "value": "VUV",
              "label": "VUV"
            },
            {
              "value": "WST",
              "label": "WST"
            },
            {
              "value": "XAF",
              "label": "XAF"
            },
            {
              "value": "XCD",
              "label": "XCD"
            },
            {
              "value": "XOF",
              "label": "XOF"
            },
            {
              "value": "XPF",
              "label": "XPF"
            },
            {
              "value": "YER",
              "label": "YER"
            },
            {
              "value": "ZAR",
              "label": "ZAR"
            },
            {
              "value": "ZMK",
              "label": "ZMK"
            },
            {
              "value": "ZWD",
              "label": "ZWD"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Provider",
        "label": "OB Provider",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Ceridian",
              "label": "Ceridian"
            },
            {
              "value": "ADP",
              "label": "ADP"
            },
            {
              "value": "One Source",
              "label": "One Source"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Allowed Payment Types",
        "label": "OB Allowed Payment Types",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Payment Election Rules",
          "key": "Payment Election Rule Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Account Number",
        "label": "OB Account Number",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "OB Bank Statement Format",
        "label": "OB Bank Statement Format",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Earnings",
    "slug": "Earnings",
    "fields": [
      {
        "key": "Use in Workday?",
        "label": "Use in Workday?",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Effective Date",
        "label": "Effective Date",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "DateFormatting"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Effective Date is a required column and must be populated"
            },
            {
              "ValidationType": "DateFormatting",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Effective Date needs to be formatted for cloudloader (ie 01-Jan-1990)."
            }
          ]
        }
      },
      {
        "key": "Earning Name",
        "label": "Earning Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Earning Name is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Earning Name must be unique and cannot be duplicated."
            }
          ]
        }
      },
      {
        "key": "Code",
        "label": "Code",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn",
            "StringCounter"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Earning Code is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Earning Code must be unique and cannot be duplicated."
            },
            {
              "ValidationType": "StringCounter",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": 20,
              "Error Message": "Earning Code can't be longer than 20 characters."
            }
          ]
        }
      },
      {
        "key": "Earning Code on Current System",
        "label": "Earning Code on Current System",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Earning Code on Current System is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Payslip Override Name",
        "label": "Payslip Override Name",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Run Category Eligibility",
        "label": "Run Category Eligibility",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Run Categories",
          "key": "Run Category Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Run Category Eligibility column must be populated with values available on the Run Categories worksheet."
            }
          ]
        }
      },
      {
        "key": "Run Category Eligibility 2",
        "label": "Run Category Eligibility 2",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Run Category Eligibility 2 column must be populated with values available on the Run Categories worksheet."
            }
          ]
        }
      },
      {
        "key": "Run Category Eligibility 3",
        "label": "Run Category Eligibility 3",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Run Category Eligibility 3 column must be populated with values available on the Run Categories worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility",
        "label": "Pay Group Detail Eligibility",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 2",
        "label": "Pay Group Detail Eligibility 2",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 2 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 3",
        "label": "Pay Group Detail Eligibility 3",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 3 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 4",
        "label": "Pay Group Detail Eligibility 4",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 4 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 5",
        "label": "Pay Group Detail Eligibility 5",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 5 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Worker Eligibility Calculation Name",
        "label": "Worker Eligibility Calculation Name",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Worker Eligibility Calculation Type",
        "label": "Worker Eligibility Calculation Type",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Worker Eligibility Calculation Workday Owned",
        "label": "Worker Eligibility Calculation Workday Owned",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Scheduling",
        "label": "Scheduling",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Name",
        "label": "Calculation Name",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Payroll Input",
              "label": "Payroll Input"
            },
            {
              "value": "Hours (unprorated) * rate",
              "label": "Hours (unprorated) * rate"
            },
            {
              "value": "Benefits: Imputed Income for GTL (Employee)",
              "label": "Benefits: Imputed Income for GTL (Employee)"
            },
            {
              "value": "Compensation: Compensation Element Value (Using PC Freq Override)",
              "label": "Compensation: Compensation Element Value (Using PC Freq Override)"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Type",
        "label": "Calculation Type",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Workday Owned",
        "label": "Workday Owned",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Input Amount Allowed",
        "label": "Input Amount Allowed",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Input Amount Allowed column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Override Frequency",
        "label": "Override Frequency",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Proration",
        "label": "Calculation Proration",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Gross Up Calculation",
        "label": "Gross Up Calculation",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Gross Up Calculation column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FLSA",
        "label": "FLSA",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FLSA column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Related Calculations?",
        "label": "Related Calculations?",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Compensation Element",
        "label": "Compensation Element",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Allowance",
              "label": "Allowance"
            },
            {
              "value": "Hourly Pay",
              "label": "Hourly Pay"
            },
            {
              "value": "Incentive",
              "label": "Incentive"
            },
            {
              "value": "Salary Pay",
              "label": "Salary Pay"
            },
            {
              "value": "Standard Base Pay",
              "label": "Standard Base Pay"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Compensation Element 2",
        "label": "Compensation Element 2",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Allowance",
              "label": "Allowance"
            },
            {
              "value": "Hourly Pay",
              "label": "Hourly Pay"
            },
            {
              "value": "Incentive",
              "label": "Incentive"
            },
            {
              "value": "Salary Pay",
              "label": "Salary Pay"
            },
            {
              "value": "Standard Base Pay",
              "label": "Standard Base Pay"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Causes Proration",
        "label": "Causes Proration",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Causes Proration column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Calculation Worktag Reference Type",
        "label": "Calculation Worktag Reference Type",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "System_Worktag_Dimension_ID",
              "label": "System_Worktag_Dimension_ID"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Worktag Reference ID",
        "label": "Calculation Worktag Reference ID",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "POSITION",
              "label": "POSITION"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Adds to Gross",
        "label": "Adds to Gross",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match",
            "Earningyes"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Adds to Gross column must be populated with either 'Yes' or 'No'."
            },
            {
              "ValidationType": "Earningyes",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Earning is marked as YES for both Adds to Gross and Non Cash Taxable Benefit."
            }
          ]
        }
      },
      {
        "key": "Federal Taxable",
        "label": "Federal Taxable",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Federal Taxable (Withhold Taxes) column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FICA Taxable",
        "label": "FICA Taxable",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FICA Taxable column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FUI Taxable",
        "label": "FUI Taxable",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FUI Taxable column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "State Withholding Taxable",
        "label": "State Withholding Taxable",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The State Withholding Taxable (Withhold Taxes) column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Local Withholding Taxable",
        "label": "Local Withholding Taxable",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Local Withholding Taxable (Withhold Taxes) column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "SUI Taxable",
        "label": "SUI Taxable",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The SUI Taxable column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Retirement Savings Eligible Wages",
        "label": "Retirement Savings Eligible Wages",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Retirement Savings Taxable Wages column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FLSA Wages",
        "label": "FLSA Wages",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FLSA Wages column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FLSA Hours",
        "label": "FLSA Hours",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FLSA Hours column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Non Cash Taxable Benefits",
        "label": "Non Cash Taxable Benefits",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Non Cash Taxable column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Non Resident Alien Income Reporting",
        "label": "Non Resident Alien Income Reporting",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Effort Certification",
        "label": "Effort Certification",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Effort Certification column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Supplemental Earning",
        "label": "Supplemental Earning",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Standard",
              "label": "Standard"
            },
            {
              "value": "Alternate",
              "label": "Alternate"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "SupplementalEarnings",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Supplemental Earning column must be populated with Standard, Alternate or Does Not Apply."
            }
          ]
        }
      },
      {
        "key": "Withholding Order",
        "label": "Withholding Order",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "(All): Periodic Earnings",
              "label": "(All): Periodic Earnings"
            },
            {
              "value": "(All): Monetary Gifts and Prizes",
              "label": "(All): Monetary Gifts and Prizes"
            },
            {
              "value": "(All): Lump Sum Earnings",
              "label": "(All): Lump Sum Earnings"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "WithholdingOrder",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Withholding Order column must be populated with a valid value from the drop-down list in that column. "
            }
          ]
        }
      },
      {
        "key": "Do Not Recalculate Retro",
        "label": "Do Not Recalculate Retro",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Absence Plan",
        "label": "Absence Plan",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "GL Expense Account",
        "label": "GL Expense Account",
        "type": "reference",
        "config": {
          "ref": "General Ledger Account Sets",
          "key": "Ledger Account Identifier",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Exclude from Forward Accrual",
        "label": "Exclude from Forward Accrual",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Additional Configuration Notes",
        "label": "Additional Configuration Notes",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "WD Owned PC Code",
        "label": "WD Owned PC Code",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Deductions",
    "slug": "Deductions",
    "fields": [
      {
        "key": "Use in Workday?",
        "label": "Use in Workday?",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Effective Date",
        "label": "Effective Date",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "DateFormatting"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Effective Date is a required column and must be populated"
            },
            {
              "ValidationType": "DateFormatting",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Effective Date needs to be formatted for cloudloader (ie 01-Jan-1990)."
            }
          ]
        }
      },
      {
        "key": "Deduction Name",
        "label": "Deduction Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Name is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Name must be unique and cannot be duplicated."
            }
          ]
        }
      },
      {
        "key": "Code",
        "label": "Code",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn",
            "StringCounter"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Code is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Code must be unique and cannot be duplicated."
            },
            {
              "ValidationType": "StringCounter",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": 20,
              "Error Message": "Deduction Code can't be longer than 20 characters."
            }
          ]
        }
      },
      {
        "key": "Deduction Code on Current System",
        "label": "Deduction Code on Current System",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Code on Current System is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Payslip Override Name",
        "label": "Payslip Override Name",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Run Category Eligibility",
        "label": "Run Category Eligibility",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Run Categories",
          "key": "Run Category Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Run Category Eligibility column must be populated with values available on the Run Categories worksheet."
            }
          ]
        }
      },
      {
        "key": "Run Category Eligibility 2",
        "label": "Run Category Eligibility 2",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Run Category Eligibility 2 column must be populated with values available on the Run Categories worksheet."
            }
          ]
        }
      },
      {
        "key": "Run Category Eligibility 3",
        "label": "Run Category Eligibility 3",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Run Categories",
              "Compare Column": "Run Category Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Run Category Eligibility 3 column must be populated with values available on the Run Categories worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility",
        "label": "Pay Group Detail Eligibility",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 2",
        "label": "Pay Group Detail Eligibility 2",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 2 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 3",
        "label": "Pay Group Detail Eligibility 3",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 3 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 4",
        "label": "Pay Group Detail Eligibility 4",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 4 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group Detail Eligibility 5",
        "label": "Pay Group Detail Eligibility 5",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Group Detail Eligibility 5 column must be populated with values available on the Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Worker Eligibility Calculation Name",
        "label": "Worker Eligibility Calculation Name",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Payroll Input (Onetime or Ongoing) Exists for Pay Component (Sub Period)",
              "label": "Payroll Input (Onetime or Ongoing) Exists for Pay Component (Sub Period)"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Worker Eligibility Calculation Type",
        "label": "Worker Eligibility Calculation Type",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "AND/OR",
              "label": "AND/OR"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Worker Eligibility Calculation Workday Owned",
        "label": "Worker Eligibility Calculation Workday Owned",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Scheduling",
        "label": "Scheduling",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Name",
        "label": "Calculation Name",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Payroll Input",
              "label": "Payroll Input"
            },
            {
              "value": "Benefits: Employee Cost (Pre-tax)",
              "label": "Benefits: Employee Cost (Pre-tax)"
            },
            {
              "value": "Benefits: Employee Cost (Post-tax)",
              "label": "Benefits: Employee Cost (Post-tax)"
            },
            {
              "value": "Benefits: Employer Cost",
              "label": "Benefits: Employer Cost"
            },
            {
              "value": "Benefits: Base (unprorated) * Percent OR Flat Amount",
              "label": "Benefits: Base (unprorated) * Percent OR Flat Amount"
            },
            {
              "value": "Base (unprorated) * Percent",
              "label": "Base (unprorated) * Percent"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Type",
        "label": "Calculation Type",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Workday Owned",
        "label": "Workday Owned",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Input Amount Allowed",
        "label": "Input Amount Allowed",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Input Amount Allowed column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Override Frequency",
        "label": "Override Frequency",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Frequency",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Override Frequency column values must be one of the values available in the drop down."
            }
          ]
        }
      },
      {
        "key": "Calculation Proration",
        "label": "Calculation Proration",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "CalculationProration",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Calculation Proration column values must be one of the values available in the drop down."
            }
          ]
        }
      },
      {
        "key": "Retro Calculation",
        "label": "Retro Calculation",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Retro Calculation column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Calculation Worktag",
        "label": "Calculation Worktag",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Include Input?",
        "label": "Include Input?",
        "type": "string",
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Include Input? column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Related Calculations?",
        "label": "Related Calculations?",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Limits",
        "label": "Limits",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Worktag Reference Type",
        "label": "Calculation Worktag Reference Type",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "System_Worktag_Dimension_ID",
              "label": "System_Worktag_Dimension_ID"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Calculation Worktag Reference ID",
        "label": "Calculation Worktag Reference ID",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Pre Tax Deductions",
        "label": "Pre Tax Deductions",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match",
            "Taxdeduction"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pre Tax Deductions column must be populated with either 'Yes' or 'No'."
            },
            {
              "ValidationType": "Taxdeduction",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "A deduction should be EITHER Pre Tax, Post Tax, OR an Employer Paid Benefit.  It should not be more than one of these."
            }
          ]
        }
      },
      {
        "key": "Post Tax Deductions",
        "label": "Post Tax Deductions",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Post Tax Deductions column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Employer Paid Benefits",
        "label": "Employer Paid Benefits",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Employer Deduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Federal Taxable Reduction",
        "label": "Federal Taxable Reduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Federal Taxable Reduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FICA Taxable Reduction",
        "label": "FICA Taxable Reduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FICA Taxable Reduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "State Withholding Taxable Reduction",
        "label": "State Withholding Taxable Reduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The State Withholding Taxable Reduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FUI Taxable Reduction",
        "label": "FUI Taxable Reduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FUI Taxable Reduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "SUI Taxable Reduction",
        "label": "SUI Taxable Reduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The SUI Taxable Reduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Local Withholding Taxable Reduction",
        "label": "Local Withholding Taxable Reduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Local WithholdingTaxable Reduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Section 125 Cafeteria Plan",
        "label": "Section 125 Cafeteria Plan",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Section 125 column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "FSA Employee Deduction",
        "label": "FSA Employee Deduction",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The FSA EE Deduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Withholding Order",
        "label": "Withholding Order",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "(All): Disability Insurance",
              "label": "(All): Disability Insurance"
            },
            {
              "value": "(All): Group Life / Group Accident",
              "label": "(All): Group Life / Group Accident"
            },
            {
              "value": "(All): Loan Repayment to Employer",
              "label": "(All): Loan Repayment to Employer"
            },
            {
              "value": "(All): Mandatory Retirement Deductions",
              "label": "(All): Mandatory Retirement Deductions"
            },
            {
              "value": "(All): Mandatory Union Dues",
              "label": "(All): Mandatory Union Dues"
            },
            {
              "value": "(All): Medical Insurance",
              "label": "(All): Medical Insurance"
            },
            {
              "value": "(All): Medical Savings Account",
              "label": "(All): Medical Savings Account"
            },
            {
              "value": "(All): Retirement Plan Deductions",
              "label": "(All): Retirement Plan Deductions"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "DeductionWithholdingOrder",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Withholding Order column values must be one of the values available in the drop down."
            }
          ]
        }
      },
      {
        "key": "Recalculate Retro",
        "label": "Recalculate Retro",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Benefit Plan",
        "label": "Benefit Plan",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "GL Expense Account",
        "label": "GL Expense Account",
        "type": "reference",
        "config": {
          "ref": "General Ledger Account Sets",
          "key": "Ledger Account Identifier",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "GL Liability Account",
        "label": "GL Liability Account",
        "type": "reference",
        "config": {
          "ref": "General Ledger Account Sets",
          "key": "Ledger Account Identifier",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Exclude from Forward Accrual",
        "label": "Exclude from Forward Accrual",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Additional Configuration Notes",
        "label": "Additional Configuration Notes",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "WD Owned PC Code",
        "label": "WD Owned PC Code",
        "type": "string",
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Role Assignments",
    "slug": "Role Assignments",
    "fields": [
      {
        "key": "Worker ID",
        "label": "Worker ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Position ID",
        "label": "Position ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "First Name",
        "label": "First Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Last Name",
        "label": "Last Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Pay Group",
        "label": "Pay Group",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Pay Groups",
          "key": "Pay Group Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Worker ID-2",
        "label": "Worker ID-2",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "First Name-2",
        "label": "First Name-2",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Last Name-2",
        "label": "Last Name-2",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Deduction Priority and Arrears",
    "slug": "Deduction Priority and Arrears",
    "fields": [
      {
        "key": "Deduction Name",
        "label": "Deduction Name",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Deductions",
          "key": "Deduction Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match",
            "Employerbenefits"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Name is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Deductions",
              "Compare Column": "Deduction Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Name must match a deduction name from the Deductions tab"
            },
            {
              "ValidationType": "Employerbenefits",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "A Deduction marked as 'Yes' for Employer Paid Benefit on the Deductions tab should not be included on the Deduction Priority and Arrears tab"
            }
          ]
        }
      },
      {
        "key": "Deduction Code",
        "label": "Deduction Code",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Code is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "Deductions",
              "Compare Column": "Code",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction Code must match a deduction name from the Deductions tab"
            }
          ]
        }
      },
      {
        "key": "Priority Order",
        "label": "Priority Order",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Duplicatecolumn",
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Priority Order values must be unique."
            },
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Priority Order is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Do Not Take Partial Deduction",
        "label": "Do Not Take Partial Deduction",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Do Not Take Partial Deduction column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Deduction Impacts other Components of Net Pay",
        "label": "Deduction Impacts other Components of Net Pay",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Deduction Impacts other Components of Net Pay column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Track Arrears",
        "label": "Track Arrears",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Arrears",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Arrears",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Deduction marked as 'Yes' for Recoup Arrears and 'No' (or blank) for Track Arrears."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Track Arrears column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      },
      {
        "key": "Recoup Arrears",
        "label": "Recoup Arrears",
        "type": "enum",
        "config": {
          "options": [
            {
              "value": "Yes",
              "label": "Yes"
            },
            {
              "value": "No",
              "label": "No"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Yes_No",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Recoup Arrears column must be populated with either 'Yes' or 'No'."
            }
          ]
        }
      }
    ]
  },
  {
    "name": "General Ledger Account Sets",
    "slug": "General Ledger Account Sets",
    "fields": [
      {
        "key": "Parent Account Set Name",
        "label": "Parent Account Set Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Account Set Name",
        "label": "Account Set Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Account Set Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Ledger Account Identifier",
        "label": "Ledger Account Identifier",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Ledger Account Identifier is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Ledger Account Identifier must be unique."
            }
          ]
        }
      },
      {
        "key": "Ledger Account Name",
        "label": "Ledger Account Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Ledger Account Name is a required column and must be populated."
            },
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Ledger Account Name must be unique."
            }
          ]
        }
      },
      {
        "key": "Ledger Account Type",
        "label": "Ledger Account Type",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Asset",
              "label": "Asset"
            },
            {
              "value": "Equity",
              "label": "Equity"
            },
            {
              "value": "Expense",
              "label": "Expense"
            },
            {
              "value": "Income",
              "label": "Income"
            },
            {
              "value": "Liability",
              "label": "Liability"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Ledger Account Type is a required column and must be populated."
            },
            {
              "ValidationType": "Match",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "LedgerAccountTypes",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Ledger Account Type column values must be one of the values available in the drop down."
            }
          ]
        }
      }
    ]
  },
  {
    "name": "Payment Election Rules",
    "slug": "Payment Election Rules",
    "fields": [
      {
        "key": "Payment Election Rule Name",
        "label": "Payment Election Rule Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Payment Election Rule Name must be unique."
            }
          ]
        }
      },
      {
        "key": "Run Category",
        "label": "Run Category",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Run Categories",
          "key": "Run Category Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Duplicatecolumn"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Duplicatecolumn",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Run Category must be unique."
            }
          ]
        }
      },
      {
        "key": "Allowed Payment Types for Payment Elections 1",
        "label": "Allowed Payment Types for Payment Elections 1",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Allowed Payment Types for Payment Elections 2",
        "label": "Allowed Payment Types for Payment Elections 2",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Allowed Payment Types for Payment Elections 3",
        "label": "Allowed Payment Types for Payment Elections 3",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Override Payment Type",
        "label": "Override Payment Type",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Manual",
              "label": "Manual"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Default Payment Type",
        "label": "Default Payment Type",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Manual",
              "label": "Manual"
            }
          ]
        },
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "Max Number of Elections",
        "label": "Max Number of Elections",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      }
    ]
  },
  {
    "name": "Payment Elections",
    "slug": "Payment Elections",
    "fields": [
      {
        "key": "Employee ID",
        "label": "Employee ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Employee ID is a required column and must be populated."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "Imported EE Data",
              "Compare Column": "Employee ID",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Employee ID column values must be one of the values available in the Imported EE Data worksheet."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "Assign Pay Groups",
              "Compare Column": "Employee ID",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Employee ID was not found on the Assign Pay Groups worksheet.  Workers must be assigned to a pay group to have a payment election."
            }
          ]
        }
      },
      {
        "key": "First Name",
        "label": "First Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "First Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Last Name",
        "label": "Last Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Last Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Country",
        "label": "Country",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Afghanistan",
              "label": "Afghanistan"
            },
            {
              "value": "Albania",
              "label": "Albania"
            },
            {
              "value": "Algeria",
              "label": "Algeria"
            },
            {
              "value": "American Samoa",
              "label": "American Samoa"
            },
            {
              "value": "Andorra",
              "label": "Andorra"
            },
            {
              "value": "Angola",
              "label": "Angola"
            },
            {
              "value": "Anguilla",
              "label": "Anguilla"
            },
            {
              "value": "Antigua and Barbuda",
              "label": "Antigua and Barbuda"
            },
            {
              "value": "Argentina",
              "label": "Argentina"
            },
            {
              "value": "Armenia",
              "label": "Armenia"
            },
            {
              "value": "Aruba",
              "label": "Aruba"
            },
            {
              "value": "Australia",
              "label": "Australia"
            },
            {
              "value": "Austria",
              "label": "Austria"
            },
            {
              "value": "Azerbaijan",
              "label": "Azerbaijan"
            },
            {
              "value": "Bahamas",
              "label": "Bahamas"
            },
            {
              "value": "Bahrain",
              "label": "Bahrain"
            },
            {
              "value": "Bangladesh",
              "label": "Bangladesh"
            },
            {
              "value": "Barbados",
              "label": "Barbados"
            },
            {
              "value": "Belarus",
              "label": "Belarus"
            },
            {
              "value": "Belgium",
              "label": "Belgium"
            },
            {
              "value": "Belize",
              "label": "Belize"
            },
            {
              "value": "Benin",
              "label": "Benin"
            },
            {
              "value": "Bermuda",
              "label": "Bermuda"
            },
            {
              "value": "Bhutan",
              "label": "Bhutan"
            },
            {
              "value": "Bolivia",
              "label": "Bolivia"
            },
            {
              "value": "Bonaire, Sint Eustatius, and Saba",
              "label": "Bonaire, Sint Eustatius, and Saba"
            },
            {
              "value": "Bosnia and Herzegovina",
              "label": "Bosnia and Herzegovina"
            },
            {
              "value": "Botswana",
              "label": "Botswana"
            },
            {
              "value": "Brazil",
              "label": "Brazil"
            },
            {
              "value": "British Indian Ocean Territory",
              "label": "British Indian Ocean Territory"
            },
            {
              "value": "British Virgin Islands",
              "label": "British Virgin Islands"
            },
            {
              "value": "Brunei",
              "label": "Brunei"
            },
            {
              "value": "Bulgaria",
              "label": "Bulgaria"
            },
            {
              "value": "Burkina Faso",
              "label": "Burkina Faso"
            },
            {
              "value": "Burundi",
              "label": "Burundi"
            },
            {
              "value": "Cambodia",
              "label": "Cambodia"
            },
            {
              "value": "Cameroon",
              "label": "Cameroon"
            },
            {
              "value": "Canada",
              "label": "Canada"
            },
            {
              "value": "Cape Verde",
              "label": "Cape Verde"
            },
            {
              "value": "Cayman Islands",
              "label": "Cayman Islands"
            },
            {
              "value": "Central African Republic",
              "label": "Central African Republic"
            },
            {
              "value": "Chad",
              "label": "Chad"
            },
            {
              "value": "Chile",
              "label": "Chile"
            },
            {
              "value": "China",
              "label": "China"
            },
            {
              "value": "Colombia",
              "label": "Colombia"
            },
            {
              "value": "Comoros",
              "label": "Comoros"
            },
            {
              "value": "Congo",
              "label": "Congo"
            },
            {
              "value": "Congo, Democratic Republic of",
              "label": "Congo, Democratic Republic of"
            },
            {
              "value": "Cook Islands",
              "label": "Cook Islands"
            },
            {
              "value": "Costa Rica",
              "label": "Costa Rica"
            },
            {
              "value": "C\u00f4te D'Ivoire",
              "label": "C\u00f4te D'Ivoire"
            },
            {
              "value": "Croatia",
              "label": "Croatia"
            },
            {
              "value": "Cuba",
              "label": "Cuba"
            },
            {
              "value": "Cura\u00e7ao",
              "label": "Cura\u00e7ao"
            },
            {
              "value": "Cyprus",
              "label": "Cyprus"
            },
            {
              "value": "Czech Republic",
              "label": "Czech Republic"
            },
            {
              "value": "Denmark",
              "label": "Denmark"
            },
            {
              "value": "Djibouti",
              "label": "Djibouti"
            },
            {
              "value": "Dominica",
              "label": "Dominica"
            },
            {
              "value": "Dominican Republic",
              "label": "Dominican Republic"
            },
            {
              "value": "Ecuador",
              "label": "Ecuador"
            },
            {
              "value": "Egypt",
              "label": "Egypt"
            },
            {
              "value": "El Salvador",
              "label": "El Salvador"
            },
            {
              "value": "Equatorial Guinea",
              "label": "Equatorial Guinea"
            },
            {
              "value": "Eritrea",
              "label": "Eritrea"
            },
            {
              "value": "Estonia",
              "label": "Estonia"
            },
            {
              "value": "Ethiopia",
              "label": "Ethiopia"
            },
            {
              "value": "Falkland Islands",
              "label": "Falkland Islands"
            },
            {
              "value": "Faroe Islands",
              "label": "Faroe Islands"
            },
            {
              "value": "Fiji",
              "label": "Fiji"
            },
            {
              "value": "Finland",
              "label": "Finland"
            },
            {
              "value": "France",
              "label": "France"
            },
            {
              "value": "French Guiana",
              "label": "French Guiana"
            },
            {
              "value": "French Polynesia",
              "label": "French Polynesia"
            },
            {
              "value": "Gabon",
              "label": "Gabon"
            },
            {
              "value": "Gambia",
              "label": "Gambia"
            },
            {
              "value": "Georgia",
              "label": "Georgia"
            },
            {
              "value": "Germany",
              "label": "Germany"
            },
            {
              "value": "Ghana",
              "label": "Ghana"
            },
            {
              "value": "Gibraltar",
              "label": "Gibraltar"
            },
            {
              "value": "Greece",
              "label": "Greece"
            },
            {
              "value": "Greenland",
              "label": "Greenland"
            },
            {
              "value": "Grenada",
              "label": "Grenada"
            },
            {
              "value": "Guadeloupe",
              "label": "Guadeloupe"
            },
            {
              "value": "Guam",
              "label": "Guam"
            },
            {
              "value": "Guatemala",
              "label": "Guatemala"
            },
            {
              "value": "Guernsey",
              "label": "Guernsey"
            },
            {
              "value": "Guinea",
              "label": "Guinea"
            },
            {
              "value": "Guinea-Bissau",
              "label": "Guinea-Bissau"
            },
            {
              "value": "Guyana",
              "label": "Guyana"
            },
            {
              "value": "Haiti",
              "label": "Haiti"
            },
            {
              "value": "Holy See (Vatican City State)",
              "label": "Holy See (Vatican City State)"
            },
            {
              "value": "Honduras",
              "label": "Honduras"
            },
            {
              "value": "Hong Kong",
              "label": "Hong Kong"
            },
            {
              "value": "Hungary",
              "label": "Hungary"
            },
            {
              "value": "Iceland",
              "label": "Iceland"
            },
            {
              "value": "India",
              "label": "India"
            },
            {
              "value": "Indonesia",
              "label": "Indonesia"
            },
            {
              "value": "Iran",
              "label": "Iran"
            },
            {
              "value": "Iraq",
              "label": "Iraq"
            },
            {
              "value": "Ireland",
              "label": "Ireland"
            },
            {
              "value": "Isle of Man",
              "label": "Isle of Man"
            },
            {
              "value": "Israel",
              "label": "Israel"
            },
            {
              "value": "Italy",
              "label": "Italy"
            },
            {
              "value": "Jamaica",
              "label": "Jamaica"
            },
            {
              "value": "Japan",
              "label": "Japan"
            },
            {
              "value": "Jersey",
              "label": "Jersey"
            },
            {
              "value": "Jordan",
              "label": "Jordan"
            },
            {
              "value": "Kazakhstan",
              "label": "Kazakhstan"
            },
            {
              "value": "Kenya",
              "label": "Kenya"
            },
            {
              "value": "Kiribati",
              "label": "Kiribati"
            },
            {
              "value": "Korea, Democratic People's Republic of",
              "label": "Korea, Democratic People's Republic of"
            },
            {
              "value": "Korea, Republic of",
              "label": "Korea, Republic of"
            },
            {
              "value": "Kosovo",
              "label": "Kosovo"
            },
            {
              "value": "Kuwait",
              "label": "Kuwait"
            },
            {
              "value": "Kyrgyzstan",
              "label": "Kyrgyzstan"
            },
            {
              "value": "Laos",
              "label": "Laos"
            },
            {
              "value": "Latvia",
              "label": "Latvia"
            },
            {
              "value": "Lebanon",
              "label": "Lebanon"
            },
            {
              "value": "Lesotho",
              "label": "Lesotho"
            },
            {
              "value": "Liberia",
              "label": "Liberia"
            },
            {
              "value": "Libya",
              "label": "Libya"
            },
            {
              "value": "Liechtenstein",
              "label": "Liechtenstein"
            },
            {
              "value": "Lithuania",
              "label": "Lithuania"
            },
            {
              "value": "Luxembourg",
              "label": "Luxembourg"
            },
            {
              "value": "Macao",
              "label": "Macao"
            },
            {
              "value": "Macedonia",
              "label": "Macedonia"
            },
            {
              "value": "Madagascar",
              "label": "Madagascar"
            },
            {
              "value": "Malawi",
              "label": "Malawi"
            },
            {
              "value": "Malaysia",
              "label": "Malaysia"
            },
            {
              "value": "Maldives",
              "label": "Maldives"
            },
            {
              "value": "Mali",
              "label": "Mali"
            },
            {
              "value": "Malta",
              "label": "Malta"
            },
            {
              "value": "Marshall Islands",
              "label": "Marshall Islands"
            },
            {
              "value": "Martinique",
              "label": "Martinique"
            },
            {
              "value": "Mauritania",
              "label": "Mauritania"
            },
            {
              "value": "Mauritius",
              "label": "Mauritius"
            },
            {
              "value": "Mexico",
              "label": "Mexico"
            },
            {
              "value": "Micronesia, Federated States of",
              "label": "Micronesia, Federated States of"
            },
            {
              "value": "Moldova",
              "label": "Moldova"
            },
            {
              "value": "Monaco",
              "label": "Monaco"
            },
            {
              "value": "Mongolia",
              "label": "Mongolia"
            },
            {
              "value": "Montenegro",
              "label": "Montenegro"
            },
            {
              "value": "Morocco",
              "label": "Morocco"
            },
            {
              "value": "Mozambique",
              "label": "Mozambique"
            },
            {
              "value": "Myanmar",
              "label": "Myanmar"
            },
            {
              "value": "Namibia",
              "label": "Namibia"
            },
            {
              "value": "Nauru",
              "label": "Nauru"
            },
            {
              "value": "Nepal",
              "label": "Nepal"
            },
            {
              "value": "Netherlands",
              "label": "Netherlands"
            },
            {
              "value": "New Caledonia",
              "label": "New Caledonia"
            },
            {
              "value": "New Zealand",
              "label": "New Zealand"
            },
            {
              "value": "Nicaragua",
              "label": "Nicaragua"
            },
            {
              "value": "Niger",
              "label": "Niger"
            },
            {
              "value": "Nigeria",
              "label": "Nigeria"
            },
            {
              "value": "Northern Mariana Islands",
              "label": "Northern Mariana Islands"
            },
            {
              "value": "Norway",
              "label": "Norway"
            },
            {
              "value": "Oman",
              "label": "Oman"
            },
            {
              "value": "Pakistan",
              "label": "Pakistan"
            },
            {
              "value": "Palau",
              "label": "Palau"
            },
            {
              "value": "Palestine",
              "label": "Palestine"
            },
            {
              "value": "Panama",
              "label": "Panama"
            },
            {
              "value": "Papua New Guinea",
              "label": "Papua New Guinea"
            },
            {
              "value": "Paraguay",
              "label": "Paraguay"
            },
            {
              "value": "Peru",
              "label": "Peru"
            },
            {
              "value": "Philippines",
              "label": "Philippines"
            },
            {
              "value": "Poland",
              "label": "Poland"
            },
            {
              "value": "Portugal",
              "label": "Portugal"
            },
            {
              "value": "Qatar",
              "label": "Qatar"
            },
            {
              "value": "Reunion",
              "label": "Reunion"
            },
            {
              "value": "Romania",
              "label": "Romania"
            },
            {
              "value": "Russian Federation",
              "label": "Russian Federation"
            },
            {
              "value": "Rwanda",
              "label": "Rwanda"
            },
            {
              "value": "Saint Kitts and Nevis",
              "label": "Saint Kitts and Nevis"
            },
            {
              "value": "Saint Lucia",
              "label": "Saint Lucia"
            },
            {
              "value": "Saint Vincent and the Grenadines",
              "label": "Saint Vincent and the Grenadines"
            },
            {
              "value": "Samoa",
              "label": "Samoa"
            },
            {
              "value": "San Marino",
              "label": "San Marino"
            },
            {
              "value": "Sao Tome and Principe",
              "label": "Sao Tome and Principe"
            },
            {
              "value": "Saudi Arabia",
              "label": "Saudi Arabia"
            },
            {
              "value": "Senegal",
              "label": "Senegal"
            },
            {
              "value": "Serbia",
              "label": "Serbia"
            },
            {
              "value": "Seychelles",
              "label": "Seychelles"
            },
            {
              "value": "Sierra Leone",
              "label": "Sierra Leone"
            },
            {
              "value": "Singapore",
              "label": "Singapore"
            },
            {
              "value": "Sint Maarten",
              "label": "Sint Maarten"
            },
            {
              "value": "Slovakia",
              "label": "Slovakia"
            },
            {
              "value": "Slovenia",
              "label": "Slovenia"
            },
            {
              "value": "Solomon Islands",
              "label": "Solomon Islands"
            },
            {
              "value": "Somalia",
              "label": "Somalia"
            },
            {
              "value": "South Africa",
              "label": "South Africa"
            },
            {
              "value": "South Sudan",
              "label": "South Sudan"
            },
            {
              "value": "Spain",
              "label": "Spain"
            },
            {
              "value": "Sri Lanka",
              "label": "Sri Lanka"
            },
            {
              "value": "Sudan",
              "label": "Sudan"
            },
            {
              "value": "Suriname",
              "label": "Suriname"
            },
            {
              "value": "Swaziland",
              "label": "Swaziland"
            },
            {
              "value": "Sweden",
              "label": "Sweden"
            },
            {
              "value": "Switzerland",
              "label": "Switzerland"
            },
            {
              "value": "Syria",
              "label": "Syria"
            },
            {
              "value": "Taiwan",
              "label": "Taiwan"
            },
            {
              "value": "Tajikistan",
              "label": "Tajikistan"
            },
            {
              "value": "Tanzania",
              "label": "Tanzania"
            },
            {
              "value": "Thailand",
              "label": "Thailand"
            },
            {
              "value": "Timor-Leste",
              "label": "Timor-Leste"
            },
            {
              "value": "Togo",
              "label": "Togo"
            },
            {
              "value": "Tonga",
              "label": "Tonga"
            },
            {
              "value": "Trinidad and Tobago",
              "label": "Trinidad and Tobago"
            },
            {
              "value": "Tunisia",
              "label": "Tunisia"
            },
            {
              "value": "Turkey",
              "label": "Turkey"
            },
            {
              "value": "Turkmenistan",
              "label": "Turkmenistan"
            },
            {
              "value": "Turks and Caicos Islands",
              "label": "Turks and Caicos Islands"
            },
            {
              "value": "Tuvalu",
              "label": "Tuvalu"
            },
            {
              "value": "U. S. Virgin Islands",
              "label": "U. S. Virgin Islands"
            },
            {
              "value": "Uganda",
              "label": "Uganda"
            },
            {
              "value": "Ukraine",
              "label": "Ukraine"
            },
            {
              "value": "United Arab Emirates",
              "label": "United Arab Emirates"
            },
            {
              "value": "United Kingdom",
              "label": "United Kingdom"
            },
            {
              "value": "United States Minor Outlying Islands",
              "label": "United States Minor Outlying Islands"
            },
            {
              "value": "United States of America",
              "label": "United States of America"
            },
            {
              "value": "Uruguay",
              "label": "Uruguay"
            },
            {
              "value": "Uzbekistan",
              "label": "Uzbekistan"
            },
            {
              "value": "Vanuatu",
              "label": "Vanuatu"
            },
            {
              "value": "Venezuela",
              "label": "Venezuela"
            },
            {
              "value": "Vietnam",
              "label": "Vietnam"
            },
            {
              "value": "Western Sahara",
              "label": "Western Sahara"
            },
            {
              "value": "Yemen",
              "label": "Yemen"
            },
            {
              "value": "Zambia",
              "label": "Zambia"
            },
            {
              "value": "Zimbabwe",
              "label": "Zimbabwe"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Country is a required column and must be populated."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Country",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Country column values must be one of the values available in the drop down (Country name spelled out)."
            }
          ]
        }
      },
      {
        "key": "Currency",
        "label": "Currency",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "USD",
              "label": "USD"
            },
            {
              "value": "AED",
              "label": "AED"
            },
            {
              "value": "AFN",
              "label": "AFN"
            },
            {
              "value": "ALL",
              "label": "ALL"
            },
            {
              "value": "AMD",
              "label": "AMD"
            },
            {
              "value": "ANG",
              "label": "ANG"
            },
            {
              "value": "AOA",
              "label": "AOA"
            },
            {
              "value": "ARS",
              "label": "ARS"
            },
            {
              "value": "AUD",
              "label": "AUD"
            },
            {
              "value": "AWG",
              "label": "AWG"
            },
            {
              "value": "AZN",
              "label": "AZN"
            },
            {
              "value": "BAM",
              "label": "BAM"
            },
            {
              "value": "BBD",
              "label": "BBD"
            },
            {
              "value": "BDT",
              "label": "BDT"
            },
            {
              "value": "BGN",
              "label": "BGN"
            },
            {
              "value": "BHD",
              "label": "BHD"
            },
            {
              "value": "BIF",
              "label": "BIF"
            },
            {
              "value": "BMD",
              "label": "BMD"
            },
            {
              "value": "BND",
              "label": "BND"
            },
            {
              "value": "BOB",
              "label": "BOB"
            },
            {
              "value": "BRL",
              "label": "BRL"
            },
            {
              "value": "BSD",
              "label": "BSD"
            },
            {
              "value": "BTN",
              "label": "BTN"
            },
            {
              "value": "BWP",
              "label": "BWP"
            },
            {
              "value": "BYR",
              "label": "BYR"
            },
            {
              "value": "BZD",
              "label": "BZD"
            },
            {
              "value": "CAD",
              "label": "CAD"
            },
            {
              "value": "CDF",
              "label": "CDF"
            },
            {
              "value": "CHF",
              "label": "CHF"
            },
            {
              "value": "CLP",
              "label": "CLP"
            },
            {
              "value": "CNY",
              "label": "CNY"
            },
            {
              "value": "COP",
              "label": "COP"
            },
            {
              "value": "CRC",
              "label": "CRC"
            },
            {
              "value": "CUP",
              "label": "CUP"
            },
            {
              "value": "CVE",
              "label": "CVE"
            },
            {
              "value": "CZK",
              "label": "CZK"
            },
            {
              "value": "DJF",
              "label": "DJF"
            },
            {
              "value": "DKK",
              "label": "DKK"
            },
            {
              "value": "DOP",
              "label": "DOP"
            },
            {
              "value": "DZD",
              "label": "DZD"
            },
            {
              "value": "EGP",
              "label": "EGP"
            },
            {
              "value": "ERN",
              "label": "ERN"
            },
            {
              "value": "ETB",
              "label": "ETB"
            },
            {
              "value": "EUR",
              "label": "EUR"
            },
            {
              "value": "FJD",
              "label": "FJD"
            },
            {
              "value": "GBP",
              "label": "GBP"
            },
            {
              "value": "GEL",
              "label": "GEL"
            },
            {
              "value": "GHS",
              "label": "GHS"
            },
            {
              "value": "GMD",
              "label": "GMD"
            },
            {
              "value": "GNF",
              "label": "GNF"
            },
            {
              "value": "GTQ",
              "label": "GTQ"
            },
            {
              "value": "GYD",
              "label": "GYD"
            },
            {
              "value": "HKD",
              "label": "HKD"
            },
            {
              "value": "HNL",
              "label": "HNL"
            },
            {
              "value": "HRK",
              "label": "HRK"
            },
            {
              "value": "HUF",
              "label": "HUF"
            },
            {
              "value": "IDR",
              "label": "IDR"
            },
            {
              "value": "ILS",
              "label": "ILS"
            },
            {
              "value": "INR",
              "label": "INR"
            },
            {
              "value": "IQD",
              "label": "IQD"
            },
            {
              "value": "IRR",
              "label": "IRR"
            },
            {
              "value": "ISK",
              "label": "ISK"
            },
            {
              "value": "JMD",
              "label": "JMD"
            },
            {
              "value": "JOD",
              "label": "JOD"
            },
            {
              "value": "JPY",
              "label": "JPY"
            },
            {
              "value": "KES",
              "label": "KES"
            },
            {
              "value": "KGS",
              "label": "KGS"
            },
            {
              "value": "KHR",
              "label": "KHR"
            },
            {
              "value": "KMF",
              "label": "KMF"
            },
            {
              "value": "KPW",
              "label": "KPW"
            },
            {
              "value": "KRW",
              "label": "KRW"
            },
            {
              "value": "KWD",
              "label": "KWD"
            },
            {
              "value": "KYD",
              "label": "KYD"
            },
            {
              "value": "KZT",
              "label": "KZT"
            },
            {
              "value": "LAK",
              "label": "LAK"
            },
            {
              "value": "LBP",
              "label": "LBP"
            },
            {
              "value": "LKR",
              "label": "LKR"
            },
            {
              "value": "LRD",
              "label": "LRD"
            },
            {
              "value": "LTL",
              "label": "LTL"
            },
            {
              "value": "LVL",
              "label": "LVL"
            },
            {
              "value": "LYD",
              "label": "LYD"
            },
            {
              "value": "MAD",
              "label": "MAD"
            },
            {
              "value": "MDL",
              "label": "MDL"
            },
            {
              "value": "MGA",
              "label": "MGA"
            },
            {
              "value": "MKD",
              "label": "MKD"
            },
            {
              "value": "MMK",
              "label": "MMK"
            },
            {
              "value": "MNT",
              "label": "MNT"
            },
            {
              "value": "MOP",
              "label": "MOP"
            },
            {
              "value": "MRO",
              "label": "MRO"
            },
            {
              "value": "MUR",
              "label": "MUR"
            },
            {
              "value": "MVR",
              "label": "MVR"
            },
            {
              "value": "MWK",
              "label": "MWK"
            },
            {
              "value": "MXN",
              "label": "MXN"
            },
            {
              "value": "MYR",
              "label": "MYR"
            },
            {
              "value": "MZN",
              "label": "MZN"
            },
            {
              "value": "NGN",
              "label": "NGN"
            },
            {
              "value": "NIO",
              "label": "NIO"
            },
            {
              "value": "NOK",
              "label": "NOK"
            },
            {
              "value": "NPR",
              "label": "NPR"
            },
            {
              "value": "NZD",
              "label": "NZD"
            },
            {
              "value": "OMR",
              "label": "OMR"
            },
            {
              "value": "PEN",
              "label": "PEN"
            },
            {
              "value": "PGK",
              "label": "PGK"
            },
            {
              "value": "PHP",
              "label": "PHP"
            },
            {
              "value": "PKR",
              "label": "PKR"
            },
            {
              "value": "PLN",
              "label": "PLN"
            },
            {
              "value": "PYG",
              "label": "PYG"
            },
            {
              "value": "QAR",
              "label": "QAR"
            },
            {
              "value": "RON",
              "label": "RON"
            },
            {
              "value": "RSD",
              "label": "RSD"
            },
            {
              "value": "RUB",
              "label": "RUB"
            },
            {
              "value": "RWF",
              "label": "RWF"
            },
            {
              "value": "SAR",
              "label": "SAR"
            },
            {
              "value": "SBD",
              "label": "SBD"
            },
            {
              "value": "SCR",
              "label": "SCR"
            },
            {
              "value": "SDG",
              "label": "SDG"
            },
            {
              "value": "SEK",
              "label": "SEK"
            },
            {
              "value": "SGD",
              "label": "SGD"
            },
            {
              "value": "SLL",
              "label": "SLL"
            },
            {
              "value": "SOS",
              "label": "SOS"
            },
            {
              "value": "SRD",
              "label": "SRD"
            },
            {
              "value": "STD",
              "label": "STD"
            },
            {
              "value": "SYP",
              "label": "SYP"
            },
            {
              "value": "SZL",
              "label": "SZL"
            },
            {
              "value": "THB",
              "label": "THB"
            },
            {
              "value": "TJS",
              "label": "TJS"
            },
            {
              "value": "TMM",
              "label": "TMM"
            },
            {
              "value": "TND",
              "label": "TND"
            },
            {
              "value": "TOP",
              "label": "TOP"
            },
            {
              "value": "TRY",
              "label": "TRY"
            },
            {
              "value": "TTD",
              "label": "TTD"
            },
            {
              "value": "TWD",
              "label": "TWD"
            },
            {
              "value": "TZS",
              "label": "TZS"
            },
            {
              "value": "UAH",
              "label": "UAH"
            },
            {
              "value": "UGX",
              "label": "UGX"
            },
            {
              "value": "UYU",
              "label": "UYU"
            },
            {
              "value": "UZS",
              "label": "UZS"
            },
            {
              "value": "VEF",
              "label": "VEF"
            },
            {
              "value": "VND",
              "label": "VND"
            },
            {
              "value": "VUV",
              "label": "VUV"
            },
            {
              "value": "WST",
              "label": "WST"
            },
            {
              "value": "XAF",
              "label": "XAF"
            },
            {
              "value": "XCD",
              "label": "XCD"
            },
            {
              "value": "XOF",
              "label": "XOF"
            },
            {
              "value": "XPF",
              "label": "XPF"
            },
            {
              "value": "YER",
              "label": "YER"
            },
            {
              "value": "ZAR",
              "label": "ZAR"
            },
            {
              "value": "ZMK",
              "label": "ZMK"
            },
            {
              "value": "ZWD",
              "label": "ZWD"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Currency is a required column and must be populated."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Currency",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Currency column values must be one of the values available in the drop down (3 character ISO code)."
            }
          ]
        }
      },
      {
        "key": "Pay Type",
        "label": "Pay Type",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Payment Election Rules",
          "key": "Payment Election Rule Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Match_Formula",
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "Payment Election Rules",
              "Compare Column": "Payment Election Rule Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Pay Type column values must be one of the values from Payment Election Rules Tab."
            },
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Type is required and must be populated."
            }
          ]
        }
      },
      {
        "key": "Payment Type",
        "label": "Payment Type",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Check/Cheque",
              "label": "Check/Cheque"
            },
            {
              "value": "Direct Deposit",
              "label": "Direct Deposit"
            },
            {
              "value": "Manual",
              "label": "Manual"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Payment Type is a required column and must be populated."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "PaymentTypes",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Payment Type must be Direct Deposit, Check, Expense Payments"
            }
          ]
        }
      },
      {
        "key": "Priority",
        "label": "Priority",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            },
            {
              "value": "3",
              "label": "3"
            },
            {
              "value": "4",
              "label": "4"
            },
            {
              "value": "5",
              "label": "5"
            },
            {
              "value": "6",
              "label": "6"
            },
            {
              "value": "7",
              "label": "7"
            },
            {
              "value": "8",
              "label": "8"
            },
            {
              "value": "9",
              "label": "9"
            },
            {
              "value": "10",
              "label": "10"
            },
            {
              "value": "11",
              "label": "11"
            },
            {
              "value": "12",
              "label": "12"
            },
            {
              "value": "13",
              "label": "13"
            },
            {
              "value": "14",
              "label": "14"
            },
            {
              "value": "15",
              "label": "15"
            },
            {
              "value": "16",
              "label": "16"
            },
            {
              "value": "17",
              "label": "17"
            },
            {
              "value": "18",
              "label": "18"
            },
            {
              "value": "19",
              "label": "19"
            },
            {
              "value": "20",
              "label": "20"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Match_Formula",
            "UniqPriority_Formula",
            "Paymentelectionsbalance_Formula",
            "Paymentmaxelections_Formula",
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Priority",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The priority column must be populated a number between 1-10."
            },
            {
              "ValidationType": "UniqPriority_Formula",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Priority must be unique."
            },
            {
              "ValidationType": "Paymentelectionsbalance_Formula",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The highest priority must be on the election where Balance is True"
            },
            {
              "ValidationType": "Paymentmaxelections_Formula",
              "Compare Worksheet": "Payment Election Rules",
              "Compare Column": "Max Number of Elections",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Priority cannot be greater than Max Number of Elections from the Payment Election Rules tab for this Pay Type"
            },
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Priority is a required column."
            }
          ]
        }
      },
      {
        "key": "Routing Number",
        "label": "Routing Number",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "MatchValueorFormat",
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "MatchValueorFormat",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": "Payment Elections!Country=United States of America",
              "Value\\Format": "d{9}",
              "Error Message": "Routing Number column should be 9 digits only. No dashes, spaces or other special characters allowed."
            },
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": "Payment Elections!Payment Type=Direct Deposit",
              "Value\\Format": null,
              "Error Message": "Routing Number is a required column if election is Direct Deposit"
            }
          ]
        }
      },
      {
        "key": "Account Number",
        "label": "Account Number",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "UniqAcct_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": "Payment Elections!Payment Type=Direct Deposit",
              "Value\\Format": null,
              "Error Message": "Account Number is a required column and must be populated if Direct Deposit."
            },
            {
              "ValidationType": "UniqAcct_Formula",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The combination of routing number, account number, and account type must be unique. Duplicates found."
            }
          ]
        }
      },
      {
        "key": "Bank Name",
        "label": "Bank Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": "Payment Elections!Payment Type=Direct Deposit",
              "Value\\Format": null,
              "Error Message": "Bank Name is a required column if Payment Type is Direct Deposit"
            }
          ]
        }
      },
      {
        "key": "Account Type Code",
        "label": "Account Type Code",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Checking",
              "label": "Checking"
            },
            {
              "value": "Savings",
              "label": "Savings"
            }
          ]
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": "Payment Elections!Payment Type=Direct Deposit",
              "Value\\Format": null,
              "Error Message": "Account Type Code is a required column and must be populated if Direct Deposit."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "EE Drop Downs",
              "Compare Column": "Checking or Savings",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Account Type Code column must be populated with either a Checking or Savings."
            }
          ]
        }
      },
      {
        "key": "Amount",
        "label": "Amount",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Numeric"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Numeric",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Amount column should contain numeric values only."
            }
          ]
        }
      },
      {
        "key": "Percent",
        "label": "Percent",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Numeric",
            "percent100_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Numeric",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Percent column should contain numeric values only."
            },
            {
              "ValidationType": "percent100_Formula",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Total election Percent cannot be greater than 100% "
            }
          ]
        }
      },
      {
        "key": "Balance",
        "label": "Balance",
        "type": "enum",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "options": [
            {
              "value": "Y",
              "label": "Y"
            }
          ]
        },
        "metadata": {
          "validations": [
            "amountpercentbalance_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "amountpercentbalance_Formula",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "If Balance is TRUE, then Amount and Percent should be blank.  If Balance is NOT TRUE, then only Amount OR Percent may be populated."
            }
          ]
        }
      }
    ]
  },
  {
    "name": "Assign Pay Groups",
    "slug": "Assign Pay Groups",
    "fields": [
      {
        "key": "Employee ID",
        "label": "Employee ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Employee ID is a required column and must be populated."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "Imported EE Data",
              "Compare Column": "Employee ID",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "The Employee ID column values must be one of the values available in the Imported EE Data worksheet."
            }
          ]
        }
      },
      {
        "key": "Position ID",
        "label": "Position ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [],
          "validation_criteria": []
        }
      },
      {
        "key": "First Name",
        "label": "First Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "First Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Last Name",
        "label": "Last Name",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Last Name is a required column and must be populated."
            }
          ]
        }
      },
      {
        "key": "Hire Date",
        "label": "Hire Date",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Missing",
            "DateFormatting",
            "CheckBasedOnCondition"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Hire Date is a required column and must be populated."
            },
            {
              "ValidationType": "DateFormatting",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Hire Date needs to be formatted correctly (ex. 01-Jan-2023)."
            },
            {
              "ValidationType": "CheckBasedOnCondition",
              "Compare Worksheet": "Imported EE Data",
              "Compare Column": "Hire Date",
              "PK\\Condition": "Assign Pay Groups!Employee ID = Imported EE Data!Employee ID",
              "Value\\Format": null,
              "Error Message": "Hire Date should match the hire date on the Imported EE Data tab."
            }
          ]
        }
      },
      {
        "key": "Pay Group Org Name",
        "label": "Pay Group Org Name",
        "type": "reference",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "config": {
          "ref": "Pay Groups",
          "key": "Pay Group Name",
          "relationship": "has-one"
        },
        "metadata": {
          "validations": [
            "Missing",
            "Match_Formula"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Group Org Name is a required column and must be populated."
            },
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group Name",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Group Name must match values listed on Pay Groups worksheet."
            }
          ]
        }
      },
      {
        "key": "Pay Group ID",
        "label": "Pay Group ID",
        "type": "string",
        "constraints": [
          {
            "type": "required"
          }
        ],
        "metadata": {
          "validations": [
            "Match_Formula",
            "Missing"
          ],
          "validation_criteria": [
            {
              "ValidationType": "Match_Formula",
              "Compare Worksheet": "Pay Groups",
              "Compare Column": "Pay Group ID",
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Group ID must match the value in Pay Group ID from the Pay Groups tab"
            },
            {
              "ValidationType": "Missing",
              "Compare Worksheet": null,
              "Compare Column": null,
              "PK\\Condition": null,
              "Value\\Format": null,
              "Error Message": "Pay Group ID is a required column and must be populated."
            }
          ]
        }
      }
    ]
  }
]