export declare function flatMap<T, K>(array: ReadonlyArray<T>, fn: (input: T) => K | Array<K>): Array<K>;
export declare function flatMap<T, K>(fn: (input: T) => K | Array<K>): (array: ReadonlyArray<T>) => Array<K>;
export declare namespace flatMap {
    function lazy<T, K>(fn: (input: T) => K | Array<K>): (value: T) => {
        done: boolean;
        hasNext: boolean;
        hasMany: boolean;
        next: K[];
    } | {
        done: boolean;
        hasNext: boolean;
        next: K;
        hasMany?: undefined;
    };
}
//# sourceMappingURL=flatMap.d.ts.map