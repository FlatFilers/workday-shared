export type Pred<T, K> = (input: T) => K;
export type PredIndexed<T, K> = (input: T, index: number, array: Array<T>) => K;
export type PredIndexedOptional<T, K> = (input: T, index?: number, array?: Array<T>) => K;
export type NonEmptyArray<T> = [T, ...Array<T>];
export type IterableContainer<T = unknown> = ReadonlyArray<T> | [];
//# sourceMappingURL=_types.d.ts.map