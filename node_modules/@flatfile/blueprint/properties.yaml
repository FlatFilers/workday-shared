openapi: 3.0.0
info:
  version: 1.0.0
  title: flatfile/blueprint
paths: {}
components:
  schemas:
    SheetConfig:
      title: Sheet Configuration
      description: Describes shape of data as well as behavior
      type: object
      required:
        - name
        - fields
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        readonly:
          type: boolean
          description: Prevent user input in this sheet
        access:
          type: array
          items:
            $ref: '#/components/schemas/SheetAccess'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          minItems: 1
          maxItems: 250
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    Action:
      type: object
      required:
        - label
      properties:
        slug:
          x-internal: true
          deprecated: true
          type: string
        label:
          type: string
        description:
          type: string
        schedule:
          type: string
          enum:
            - weekly
            - daily
            - hourly
        operation:
          type: string
          description: This will be the job operation that is triggered
        mode:
          type: string
          description: Foreground actions will prevent interacting with the resource until complete
          default: background
          enum:
            - foreground
            - background
        primary:
          type: boolean
        confirm:
          description: Whether to show a modal to confirm the action
          type: boolean
        icon:
          x-internal: true
          type: string
    PropertyList:
      type: array
      items:
        $ref: '#/components/schemas/Property'
    Constraint:
      oneOf:
        - $ref: '#/components/schemas/RequiredConstraint'
        - $ref: '#/components/schemas/UniqueConstraint'
        - $ref: '#/components/schemas/ComputedConstraint'
      discriminator:
        propertyName: type
        mapping:
          required: '#/components/schemas/RequiredConstraint'
          unique: '#/components/schemas/UniqueConstraint'
          computed: '#/components/schemas/ComputedConstraint'
    Property:
      oneOf:
        - $ref: '#/components/schemas/StringProperty'
        - $ref: '#/components/schemas/NumberProperty'
        - $ref: '#/components/schemas/BooleanProperty'
        - $ref: '#/components/schemas/DateProperty'
        - $ref: '#/components/schemas/EnumProperty'
        - $ref: '#/components/schemas/ReferenceProperty'
      discriminator:
        propertyName: type
        mapping:
          string: '#/components/schemas/StringProperty'
          number: '#/components/schemas/NumberProperty'
          boolean: '#/components/schemas/BooleanProperty'
          date: '#/components/schemas/DateProperty'
          enum: '#/components/schemas/EnumProperty'
          reference: '#/components/schemas/ReferenceProperty'
    BaseProperty:
      type: object
      required:
        - key
        - type
      properties:
        key:
          type: string
          example: name
          minLength: 1
        type:
          type: string
          default: string
          enum:
            - string
            - number
            - boolean
            - date
            - enum
            - reference
        label:
          type: string
          example: 'Full Name'
          description: User friendly field name
        description:
          type: string
          example: 'The full name of the customer'
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/Constraint'
        readonly:
          type: boolean
          description: Prevent user input into this field
        metadata:
          type: object
          additionalProperties: true
          description: Useful for any contextual metadata regarding the schema. Store any valid json here.
    ArrayableProperty:
      type: object
      properties:
        is_array:
          type: boolean
          description: Will allow multiple values and store as an array
          default: false
    NumberProperty:
      allOf:
        - $ref: '#/components/schemas/BaseProperty'
        - $ref: '#/components/schemas/ArrayableProperty'
        - type: object
          properties:
            type:
              type: string
              default: string
              enum:
                - number
            config:
              type: object
              description: Optional configuration
              properties:
                decimal_places:
                  description: Number of decimal places to round data to
                  type: integer
                  example: 2
                  default: 0
                  minimum: 0
                  maximum: 65
    BooleanProperty:
      allOf:
        - $ref: '#/components/schemas/BaseProperty'
        - type: object
          properties:
            type:
              type: string
              default: string
              enum:
                - boolean
            config:
              type: object
              properties:
                allow_indeterminate:
                  type: boolean
                  default: true
                  description: Allow a neither true or false state to be stored as `null`
    StringProperty:
      allOf:
        - $ref: '#/components/schemas/BaseProperty'
        - type: object
          properties:
            type:
              type: string
              default: string
              enum:
                - string
    DateProperty:
      allOf:
        - $ref: '#/components/schemas/BaseProperty'
        - type: object
          properties:
            type:
              type: string
              default: string
              enum:
                - date
    ReferenceProperty:
      allOf:
        - $ref: '#/components/schemas/BaseProperty'
        - $ref: '#/components/schemas/ArrayableProperty'
        - type: object
          required:
            - config
          properties:
            type:
              type: string
              default: string
              enum:
                - reference
            config:
              type: object
              required:
                - ref
                - relationship
              properties:
                ref:
                  type: string
                  description: Full path reference to a sheet configuration. Must be in the same workbook.
                  minLength: 1
                key:
                  type: string
                  description: Key of the property to use as the reference key. Defaults to `id`
                  default: id
                relationship:
                  type: string
                  description: The type of relationship this defines
                  enum:
                    - has-one
                    - has-many
    EnumProperty:
      allOf:
        - $ref: '#/components/schemas/BaseProperty'
        - $ref: '#/components/schemas/ArrayableProperty'
        - type: object
          required:
            - config
          properties:
            type:
              type: string
              default: string
              enum:
                - enum
            config:
              type: object
              required:
                - options
              properties:
                allow_custom:
                  type: boolean
                  default: false
                  description: Permit the user to create new options for this specific field.
                options:
                  type: array
                  items:
                    $ref: '#/components/schemas/EnumPropertyOption'
    EnumPropertyOption:
      type: object
      required:
        - value
      properties:
        value:
          anyOf:
            - type: string
              minLength: 0
            - type: integer
              minimum: 0
            - type: boolean
          example: 80ce8718a21c
          description: The value or ID of this option. This value will be sent in egress
        label:
          type: string
          example: High Priority
          description: A visual label for this option, defaults to value if not provided
        color:
          type: string
          description: An optional color to assign this option
          example: '#f00000'
        icon:
          type: string
          description: A reference pointer to a previously registered icon
        meta:
          type: object
          description: An arbitrary JSON object to be associated with this option and made available to hooks
    BaseConstraint:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - required
            - unique
            - computed
    RequiredConstraint:
      allOf:
        - $ref: '#/components/schemas/BaseConstraint'
        - type: object
          properties:
            type:
              enum:
                - 'required'
    UniqueConstraint:
      allOf:
        - $ref: '#/components/schemas/BaseConstraint'
        - type: object
          required:
            - type
          properties:
            type:
              enum:
                - 'unique'
            config:
              type: object
              properties:
                case_sensitive:
                  type: boolean
                  default: true
                  description: Ignore casing when determining uniqueness
                ignore_empty:
                  type: boolean
                  description: Do not flag empty values as duplicate
    ComputedConstraint:
      allOf:
        - $ref: '#/components/schemas/BaseConstraint'
        - type: object
          properties:
            type:
              enum:
                - 'computed'
    SheetAccess:
      type: string
      enum:
        - '*'
        - add
        - edit
        - delete
        - import
