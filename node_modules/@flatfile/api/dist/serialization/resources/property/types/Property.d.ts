/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
export declare const Property: core.serialization.Schema<serializers.Property.Raw, Flatfile.Property>;
export declare namespace Property {
    type Raw = Property.String | Property.Number | Property.Boolean | Property.Date | Property.Enum | Property.Reference;
    interface String extends serializers.StringProperty.Raw {
        type: "string";
    }
    interface Number extends serializers.NumberProperty.Raw {
        type: "number";
    }
    interface Boolean extends serializers.BooleanProperty.Raw {
        type: "boolean";
    }
    interface Date extends serializers.DateProperty.Raw {
        type: "date";
    }
    interface Enum extends serializers.EnumProperty.Raw {
        type: "enum";
    }
    interface Reference extends serializers.ReferenceProperty.Raw {
        type: "reference";
    }
}
