/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Flatfile from "../../..";
export declare namespace Cells {
    interface Options {
        environment?: core.Supplier<environments.FlatfileEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
        fetcher?: core.FetchFunction;
        streamingFetcher?: core.StreamingFetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Cells {
    protected readonly _options: Cells.Options;
    constructor(_options: Cells.Options);
    /**
     * Returns record cell values grouped by all fields in the sheet
     */
    getValues(sheetId: Flatfile.SheetId, request: Flatfile.GetFieldValuesRequest, requestOptions?: Cells.RequestOptions): Promise<Flatfile.CellsResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
